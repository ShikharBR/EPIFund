namespace Inview.Epi.EpiFund.Data.Migrations
{
    using System;
    using System.Data.Entity.Migrations;
    
    public partial class AddPaperAndRealEstateForms : DbMigration
    {
        public override void Up()
        {
            CreateTable(
                "dbo.PaperCommercialAssets",
                c => new
                    {
                        PaperCommercialAssetId = c.Int(nullable: false, identity: true),
                        BeneficiaryName = c.String(),
                        BeneficiaryFullName = c.String(),
                        BeneficiaryContactAddress = c.String(),
                        BeneficiaryCity = c.String(),
                        BeneficiaryState = c.String(),
                        BeneficiaryZip = c.String(),
                        BeneficiaryPhoneHome = c.String(),
                        BeneficiaryPhoneCell = c.String(),
                        BeneficiaryPhoneWork = c.String(),
                        BeneficiaryFax = c.String(),
                        BeneficiaryEmail = c.String(),
                        BeneficiaryAccountNumber = c.String(),
                        NotePayerName = c.String(),
                        NotePayerFullName = c.String(),
                        NotePayerContactAddress = c.String(),
                        NotePayerCity = c.String(),
                        NotePayerState = c.String(),
                        NotePayerZip = c.String(),
                        NotePayerPhoneHome = c.String(),
                        NotePayerPhoneCell = c.String(),
                        NotePayerPhoneWork = c.String(),
                        NotePayerFax = c.String(),
                        NotePayerEmail = c.String(),
                        NotePayerSSNOrTIN = c.String(),
                        NotePayerFICO = c.String(),
                        SecuringPropertyAddress = c.String(),
                        SecuringPropertyCity = c.String(),
                        SecuringPropertyState = c.String(),
                        SecuringPropertyZip = c.String(),
                        TypeOfProperty = c.String(),
                        PropertySquareFeet = c.Int(),
                        ApartmentUnits = c.Int(),
                        YearBuilt = c.Int(),
                        LotSize = c.String(),
                        Spaces = c.Int(),
                        PropertyGOI = c.Double(),
                        PropertyGOE = c.Double(),
                        PropertyVF = c.Double(),
                        AnnualGOI = c.Double(),
                        AnnualGOE = c.Double(),
                        AnnualVF = c.Double(),
                        CurrentVacancyFactor = c.Double(),
                        WaterService = c.String(),
                        SewerService = c.String(),
                        PowerService = c.String(),
                        PropertyAccess = c.String(),
                        NoteOrigination = c.DateTime(),
                        NotePrincipal = c.Double(),
                        BPOOfProperty = c.Double(),
                        CurrentNotePrincipal = c.Double(),
                        HasCopyOfAppraisal = c.String(),
                        MethodOfAppraisal = c.String(),
                        TypeOfNote = c.String(),
                        NoteInterestRate = c.Double(),
                        PaymentAmount = c.Double(),
                        PaymentFrequency = c.String(),
                        BalloonDateOfNote = c.DateTime(),
                        TypeOfMTGInstrument = c.String(),
                        AmortType = c.String(),
                        PaymentsMadeOnNote = c.Int(),
                        PaymentsRemainingOnNote = c.Int(),
                        IsNoteCurrent = c.Boolean(),
                        LastPaymentRecievedOnNote = c.DateTime(),
                        NextPaymentOnNote = c.DateTime(),
                        SecuringPropertyAppraisal = c.Double(),
                        WasPropertyDistressed = c.Boolean(),
                        PaymentHistory = c.String(),
                        SellerCarryNoteSalesDate = c.DateTime(),
                        SellerCarryNotePrice = c.Double(),
                        SellerCarryNoteCashDown = c.Double(),
                        OriginalPrincipalBalanceWRAP = c.Double(),
                        TotalMonthlyPaymentWRAP = c.Double(),
                        FirstmortgageBalanceWRAP = c.Double(),
                        FirstInterestRateWRAP = c.Double(),
                        FirstMortgagePaymentWRAP = c.Double(),
                        SecondMortgageBalanceWRAP = c.Double(),
                        SecondInterestRateWRAP = c.Double(),
                        SecondMortgagePaymentWRAP = c.Double(),
                        NoteServicedByAgent = c.Boolean(),
                        AgentName = c.String(),
                        AgentPhone = c.String(),
                        AgentEmail = c.String(),
                        AgentAccountNumber = c.String(),
                        AgentContactPerson = c.String(),
                        AuthorizeForwardPaymentHistory = c.Boolean(),
                        AgentAddress = c.String(),
                        AgentCity = c.String(),
                        AgentState = c.String(),
                        AgentZip = c.String(),
                        HasPicturesOfProperty = c.Boolean(),
                        GeneralComments = c.String(),
                        ResellingReason = c.String(),
                        HasEnvironmentalIssues = c.Boolean(),
                        EnvironmentalIssues = c.String(),
                        AskingPrice = c.Double(),
                    })
                .PrimaryKey(t => t.PaperCommercialAssetId);
            
            CreateTable(
                "dbo.PaperResidentialAssets",
                c => new
                    {
                        PaperResidentialAssetId = c.Int(nullable: false, identity: true),
                        BeneficiaryName = c.String(),
                        BeneficiaryFullName = c.String(),
                        BeneficiaryContactAddress = c.String(),
                        BeneficiaryCity = c.String(),
                        BeneficiaryState = c.String(),
                        BeneficiaryZip = c.String(),
                        BeneficiaryPhoneHome = c.String(),
                        BeneficiaryPhoneCell = c.String(),
                        BeneficiaryPhoneWork = c.String(),
                        BeneficiaryFax = c.String(),
                        BeneficiaryEmail = c.String(),
                        BeneficiaryAccountNumber = c.String(),
                        NotePayerName = c.String(),
                        NotePayerFullName = c.String(),
                        NotePayerContactAddress = c.String(),
                        NotePayerCity = c.String(),
                        NotePayerState = c.String(),
                        NotePayerZip = c.String(),
                        NotePayerPhoneHome = c.String(),
                        NotePayerPhoneCell = c.String(),
                        NotePayerPhoneWork = c.String(),
                        NotePayerFax = c.String(),
                        NotePayerEmail = c.String(),
                        NotePayerSSNOrTIN = c.String(),
                        NotePayerFICO = c.String(),
                        SecuringPropertyAddress = c.String(),
                        SecuringPropertyCity = c.String(),
                        SecuringPropertyState = c.String(),
                        SecuringPropertyZip = c.String(),
                        TypeOfProperty = c.String(),
                        Bedrooms = c.Int(),
                        Bathrooms = c.Int(),
                        PropertySquareFeet = c.Int(),
                        Year = c.Int(),
                        TypeOfContruction = c.String(),
                        LotSize = c.String(),
                        Parking = c.String(),
                        WaterService = c.String(),
                        SewerService = c.String(),
                        PowerService = c.String(),
                        PropertyAccess = c.String(),
                        NoteOriginationDate = c.DateTime(),
                        OriginalNotePrincipal = c.Double(),
                        BPOOfProperty = c.Double(),
                        CurrentNotePrincipal = c.Double(),
                        HasCopyOfAppraisal = c.String(),
                        MethodOfAppraisal = c.String(),
                        TypeOfNote = c.String(),
                        NoteInterestRate = c.Double(),
                        PaymentAmount = c.Double(),
                        PaymentFrequency = c.String(),
                        BalloonDateOfNote = c.DateTime(),
                        BalloonDueAmount = c.Double(),
                        TypeOfMTGInstrument = c.String(),
                        AmortType = c.String(),
                        PaymentsMadeOnNote = c.Int(),
                        PaymentsRemainingOnNote = c.Int(),
                        IsNoteCurrent = c.Boolean(),
                        LastPaymentRecievedOnNote = c.DateTime(),
                        NextPaymentOnNote = c.DateTime(),
                        SecuringPropertyAppraisal = c.Double(),
                        PaymentHistory = c.String(),
                        SellerCarryNoteSalesDate = c.DateTime(),
                        SellerCarryNotePrice = c.Double(),
                        SellerCarryNoteCashDown = c.Double(),
                        OriginalPrincipalBalanceWRAP = c.Double(),
                        TotalMonthlyPaymentWRAP = c.Double(),
                        FirstmortgageBalanceWRAP = c.Double(),
                        FirstInterestRateWRAP = c.Double(),
                        FirstMortgagePaymentWRAP = c.Double(),
                        SecondMortgageBalanceWRAP = c.Double(),
                        SecondInterestRateWRAP = c.Double(),
                        SecondMortgagePaymentWRAP = c.Double(),
                        NoteServicedByAgent = c.Boolean(),
                        AgentName = c.String(),
                        AgentPhone = c.String(),
                        AgentEmail = c.String(),
                        AgentAccountNumber = c.String(),
                        AgentContactPerson = c.String(),
                        AuthorizeForwardPaymentHistory = c.Boolean(),
                        AgentAddress = c.String(),
                        AgentCity = c.String(),
                        AgentState = c.String(),
                        AgentZip = c.String(),
                        HasPicturesOfProperty = c.Boolean(),
                        GeneralComments = c.String(),
                        SellingReason = c.String(),
                        HasTitleInsurance = c.Boolean(),
                        HomeownerInsurance = c.String(),
                        OwnerOccupied = c.Boolean(),
                        IsPropertyRental = c.Boolean(),
                        MonthlyRentRate = c.Double(),
                        HasEnvironmentalIssues = c.Boolean(),
                        EnvironmentalIssues = c.String(),
                        AskingPrice = c.Double(),
                    })
                .PrimaryKey(t => t.PaperResidentialAssetId);
            
            CreateTable(
                "dbo.RealEstateCommercialAssets",
                c => new
                    {
                        RealEstateCommercialAssetId = c.Int(nullable: false, identity: true),
                        NameOfPrincipal = c.String(),
                        NameOfCoPrincipal = c.String(),
                        HomePhone = c.String(),
                        WorkPhone = c.String(),
                        OtherPhone = c.String(),
                        Fax = c.String(),
                        EmailAddress = c.String(),
                        TypeOfProperty = c.String(),
                        PropertyAddress = c.String(),
                        PropertyCity = c.String(),
                        PropertyState = c.String(),
                        PropertyZip = c.String(),
                        FirstMortgageCompany = c.String(),
                        MortgageCompanyAddress = c.String(),
                        MortgageCompanyCity = c.String(),
                        MortgageCompanyState = c.String(),
                        MortgageCompanyZip = c.String(),
                        LenderPhone = c.String(),
                        LenderPhoneOther = c.String(),
                        AccountNumber = c.String(),
                        TypeOfMortgage = c.String(),
                        CurrentPrincipalBalance = c.Double(),
                        MonthlyPayment = c.Double(),
                        PaymentIncludes = c.String(),
                        InterestRate = c.Int(),
                        IsMortgageAnARM = c.Boolean(),
                        MortgageAdjustIfARM = c.String(),
                        NumberOfMissedPayments = c.Int(),
                        IsDebtorInAForeclosureAction = c.String(),
                        SaleDateIfForeclosing = c.String(),
                        RentableSquareFeet = c.Int(),
                        MajorTenant = c.String(),
                        NumberOfApartments = c.Int(),
                        EfficiencyApartment = c.Int(),
                        EfficiencyApartmentRentRate = c.Int(),
                        OneBedroom = c.Int(),
                        OneBedroomRentRate = c.Int(),
                        TwoBedroom = c.Int(),
                        TwoBedroomRentRate = c.Int(),
                        ThreeBedroom = c.Int(),
                        ThreeBedroomRentRate = c.Int(),
                        CurrentVacancyFactor = c.String(),
                        CurrentAnnualIncome = c.Double(),
                        CurrentAnnualOperatingExepenses = c.Double(),
                        CurrentOperatingVacancyFactor = c.String(),
                        CurrentCalendarYearToDateCashFlow = c.String(),
                        RecentUpgradesRenovations = c.String(),
                        AdditionalInformation = c.String(),
                        NeededMaintenance = c.String(),
                        AskingSalePrice = c.Double(),
                        Terms = c.String(),
                        MotivationToLiquidate = c.String(),
                    })
                .PrimaryKey(t => t.RealEstateCommercialAssetId);
            
            CreateTable(
                "dbo.RealEstateResidentialAssets",
                c => new
                    {
                        RealEstateResidentialAssetId = c.Int(nullable: false, identity: true),
                        NameOfPrincipal = c.String(),
                        NameOfCoPrincipal = c.String(),
                        HomePhone = c.String(),
                        WorkPhone = c.String(),
                        OtherPhone = c.String(),
                        Fax = c.String(),
                        EmailAddress = c.String(),
                        TypeOfProperty = c.String(),
                        PropertyAddress = c.String(),
                        PropertyCity = c.String(),
                        PropertyState = c.String(),
                        PropertyZip = c.String(),
                        MajorCrossStreets = c.String(),
                        PropertyInsuranceCarrier = c.String(),
                        PolicyNumber = c.String(),
                        InsuranceAgentName = c.String(),
                        InsuranceAgentPhone = c.String(),
                        PropertyInHOA = c.Boolean(nullable: false),
                        HOADues = c.Double(),
                        HOADueTime = c.String(),
                        HOALiensOnProperty = c.Boolean(nullable: false),
                        HOALiens = c.Double(),
                        Language = c.Int(),
                        DateOfBirth = c.DateTime(nullable: false),
                        SSN = c.String(),
                        PropertyListedForSale = c.Boolean(),
                        AgentName = c.String(),
                        AgentNumber = c.String(),
                        FirstMortgageCompany = c.String(),
                        FirstMCAddress = c.String(),
                        FirstMCCity = c.String(),
                        FirstMCState = c.String(),
                        FirstMCZip = c.String(),
                        FirstMCLenderPhone = c.String(),
                        FirstMCLenderPhoneOther = c.String(),
                        FirstMCAccountNumber = c.String(),
                        FirstMCTypeOfMortgage = c.String(),
                        FirstMCCurrentPrincipalBalance = c.Double(nullable: false),
                        FirstMCInterestRate = c.Int(),
                        FirstMCIsMortgageAnARM = c.Boolean(),
                        FirstMCMortgageAdjustIfARM = c.DateTime(),
                        FirstMCMortgageHasPPP = c.Boolean(),
                        FirstMCPPPExpireDate = c.DateTime(),
                        FirstMCMonthlyPayment = c.Double(),
                        FirstMCPaymentIncludes = c.String(),
                        FirstMCLastPaymentDate = c.DateTime(),
                        FirstMCWasLastPaymentForThatMonth = c.Boolean(),
                        FirstMCNumberOfMissedPayments = c.Int(),
                        FirstMCCurrentMortgageBalance = c.Double(),
                        FirstMCHasForclosureStarted = c.Boolean(),
                        FirstMCForclosureSaleDate = c.DateTime(),
                        SecondMortgageCompany = c.String(),
                        SecondMCAddress = c.String(),
                        SecondMCCity = c.String(),
                        SecondMCState = c.String(),
                        SecondMCZip = c.String(),
                        SecondMCLenderPhone = c.String(),
                        SecondMCLenderPhoneOther = c.String(),
                        SecondMCAccountNumber = c.String(),
                        SecondMCTypeOfMortgage = c.String(),
                        SecondMCCurrentPrincipalBalance = c.Double(nullable: false),
                        SecondMCInterestRate = c.Int(),
                        SecondMCIsMortgageAnARM = c.Boolean(),
                        SecondMCMortgageAdjustIfARM = c.DateTime(),
                        SecondMCMortgageHasPPP = c.Boolean(),
                        SecondMCPPPExpireDate = c.DateTime(),
                        SecondMCMonthlyPayment = c.Double(),
                        SecondMCPaymentIncludes = c.String(),
                        SecondMCLastPaymentDate = c.DateTime(),
                        SecondMCWasLastPaymentForThatMonth = c.Boolean(),
                        SecondMCNumberOfMissedPayments = c.Int(),
                        SecondMCCurrentMortgageBalance = c.Double(),
                        SecondMCHasForclosureStarted = c.Boolean(),
                        SecondMCForclosureSaleDate = c.DateTime(),
                        PaymentsFallBehindReason = c.String(),
                        FormOfResidence = c.String(),
                        NumberOfYears = c.Int(),
                        MaritalStatus = c.String(),
                        Dependants = c.Int(),
                        Bedrooms = c.Int(),
                        Bathrooms = c.Int(),
                        Garage = c.String(),
                        Carport = c.String(),
                        Pool = c.String(),
                        SPa = c.String(),
                        BuildingStyle = c.String(),
                        Architecture = c.String(),
                        HOA = c.Boolean(),
                        RecentUpgradeOrRemodel = c.String(),
                        DefferedMaintenance = c.String(),
                    })
                .PrimaryKey(t => t.RealEstateResidentialAssetId);
            
        }
        
        public override void Down()
        {
            DropTable("dbo.RealEstateResidentialAssets");
            DropTable("dbo.RealEstateCommercialAssets");
            DropTable("dbo.PaperResidentialAssets");
            DropTable("dbo.PaperCommercialAssets");
        }
    }
}
