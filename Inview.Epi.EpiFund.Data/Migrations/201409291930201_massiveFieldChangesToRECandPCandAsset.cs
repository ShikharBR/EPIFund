namespace Inview.Epi.EpiFund.Data.Migrations
{
    using System;
    using System.Data.Entity.Migrations;
    
    public partial class massiveFieldChangesToRECandPCandAsset : DbMigration
    {
        public override void Up()
        {
            //DropForeignKey("dbo.AssetListingAgents", "NarMemberId", "dbo.NARMembers");
            //DropForeignKey("dbo.AssetListingAgents", "AssetId", "dbo.Assets");
            //DropIndex("dbo.AssetListingAgents", new[] { "AssetId" });
            //DropIndex("dbo.AssetListingAgents", new[] { "NarMemberId" });
            AddColumn("dbo.Assets", "NoteOrigination", c => c.DateTime());
            AddColumn("dbo.Assets", "NotePrincipal", c => c.Double());
            AddColumn("dbo.Assets", "BPOOfProperty", c => c.Double());
            AddColumn("dbo.Assets", "CurrentNotePrincipal", c => c.Double());
            AddColumn("dbo.Assets", "HasCopyOfAppraisal", c => c.String());
            AddColumn("dbo.Assets", "MethodOfAppraisal", c => c.String());
            AddColumn("dbo.Assets", "TypeOfNote", c => c.String());
            AddColumn("dbo.Assets", "NoteInterestRate", c => c.Double());
            AddColumn("dbo.Assets", "PaymentAmount", c => c.Double());
            AddColumn("dbo.Assets", "PaymentFrequency", c => c.String());
            AddColumn("dbo.Assets", "BalloonDateOfNote", c => c.DateTime());
            AddColumn("dbo.Assets", "TypeOfMTGInstrument", c => c.String());
            AddColumn("dbo.Assets", "AmortType", c => c.String());
            AddColumn("dbo.Assets", "PaymentsMadeOnNote", c => c.Int());
            AddColumn("dbo.Assets", "PaymentsRemainingOnNote", c => c.Int());
            AddColumn("dbo.Assets", "IsNoteCurrent", c => c.Boolean());
            AddColumn("dbo.Assets", "LastPaymentRecievedOnNote", c => c.DateTime());
            AddColumn("dbo.Assets", "NextPaymentOnNote", c => c.DateTime());
            AddColumn("dbo.Assets", "SecuringPropertyAppraisal", c => c.Double());
            AddColumn("dbo.Assets", "WasPropertyDistressed", c => c.Boolean());
            AddColumn("dbo.Assets", "PaymentHistory", c => c.String());
            AddColumn("dbo.Assets", "SellerCarryNoteSalesDate", c => c.DateTime());
            AddColumn("dbo.Assets", "SellerCarryNotePrice", c => c.Double());
            AddColumn("dbo.Assets", "SellerCarryNoteCashDown", c => c.Double());
            AddColumn("dbo.Assets", "IsNoteWRAP", c => c.Boolean());
            AddColumn("dbo.Assets", "OriginalPrincipalBalanceWRAP", c => c.Double());
            AddColumn("dbo.Assets", "TotalMonthlyPaymentWRAP", c => c.Double());
            AddColumn("dbo.Assets", "FirstmortgageBalanceWRAP", c => c.Double());
            AddColumn("dbo.Assets", "FirstInterestRateWRAP", c => c.Double());
            AddColumn("dbo.Assets", "FirstMortgagePaymentWRAP", c => c.Double());
            AddColumn("dbo.Assets", "SecondMortgageBalanceWRAP", c => c.Double());
            AddColumn("dbo.Assets", "SecondInterestRateWRAP", c => c.Double());
            AddColumn("dbo.Assets", "SecondMortgagePaymentWRAP", c => c.Double());
            AddColumn("dbo.Assets", "NoteServicedByAgent", c => c.Boolean());
            AddColumn("dbo.Assets", "AgentName", c => c.String());
            AddColumn("dbo.Assets", "AgentPhone", c => c.String());
            AddColumn("dbo.Assets", "AgentEmail", c => c.String());
            AddColumn("dbo.Assets", "AgentAccountNumber", c => c.String());
            AddColumn("dbo.Assets", "AgentContactPerson", c => c.String());
            AddColumn("dbo.Assets", "AuthorizeForwardPaymentHistory", c => c.Boolean());
            AddColumn("dbo.Assets", "AgentAddress", c => c.String());
            AddColumn("dbo.Assets", "AgentCity", c => c.String());
            AddColumn("dbo.Assets", "AgentState", c => c.String());
            AddColumn("dbo.Assets", "AgentZip", c => c.String());
            AddColumn("dbo.Assets", "HasEnvironmentalIssues", c => c.Boolean());
            AddColumn("dbo.Assets", "EnvironmentalIssues", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "NameOfPrincipal", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "NameOfCoPrincipal", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "CorporateName", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "WorkPhone", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "CellPhone", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "Fax", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "EmailAddress", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "PropertyCounty", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "TaxAssessorNumber", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "TaxAssessorNumberOther", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "PropertyAddress", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "PropertyCity", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "PropertyState", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "PropertyZip", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "FirstMortgageCompany", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "MortgageCompanyAddress", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "MortgageCompanyCity", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "MortgageCompanyState", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "MortgageCompanyZip", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "LenderPhone", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "LenderPhoneOther", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "AccountNumber", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "TypeOfMortgage", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "CurrentPrincipalBalance", c => c.Double());
            AddColumn("dbo.PaperCommercialAssets", "MonthlyPayment", c => c.Double());
            AddColumn("dbo.PaperCommercialAssets", "PaymentIncludes", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "InterestRate", c => c.Double());
            AddColumn("dbo.PaperCommercialAssets", "IsMortgageAnARM", c => c.Boolean());
            AddColumn("dbo.PaperCommercialAssets", "MortgageAdjustIfARM", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "NumberOfMissedPayments", c => c.Int());
            AddColumn("dbo.PaperCommercialAssets", "SecuringPropertyCounty", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "HasProformaInformation", c => c.Boolean());
            AddColumn("dbo.PaperCommercialAssets", "Type", c => c.Int(nullable: false));
            AddColumn("dbo.PaperCommercialAssets", "NumberOfTenants", c => c.Int(nullable: false));
            AddColumn("dbo.PaperCommercialAssets", "HasAAARatedMajorTenant", c => c.Boolean(nullable: false));
            AddColumn("dbo.PaperCommercialAssets", "NameOfAAARatedMajorTenant", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "NumberofSuites", c => c.Int(nullable: false));
            AddColumn("dbo.PaperCommercialAssets", "VacantSuites", c => c.Int(nullable: false));
            AddColumn("dbo.PaperCommercialAssets", "OperatingStatus", c => c.Int(nullable: false));
            AddColumn("dbo.PaperCommercialAssets", "ProjectName", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "LotNumber", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "Subdivision", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "TaxBookMap", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "PropertyCondition", c => c.Int(nullable: false));
            AddColumn("dbo.PaperCommercialAssets", "GradeClassification", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "OccupancyType", c => c.Int(nullable: false));
            AddColumn("dbo.PaperCommercialAssets", "BuildingsCount", c => c.Double(nullable: false));
            AddColumn("dbo.PaperCommercialAssets", "CurrentBpo", c => c.Double(nullable: false));
            AddColumn("dbo.PaperCommercialAssets", "HasIncome", c => c.Boolean(nullable: false));
            AddColumn("dbo.PaperCommercialAssets", "ProformaAnnualIncome", c => c.Double(nullable: false));
            AddColumn("dbo.PaperCommercialAssets", "ProformaMonthlyIncome", c => c.Double(nullable: false));
            AddColumn("dbo.PaperCommercialAssets", "ProformaVacancyFac", c => c.Double(nullable: false));
            AddColumn("dbo.PaperCommercialAssets", "ProformaAnnualOperExpenses", c => c.Double(nullable: false));
            AddColumn("dbo.PaperCommercialAssets", "isPendingForeclosure", c => c.Boolean(nullable: false));
            AddColumn("dbo.PaperCommercialAssets", "ForeclosureLender", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "ForeclosurePosition", c => c.Int(nullable: false));
            AddColumn("dbo.PaperCommercialAssets", "ForeclosureRecordNumber", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "ForeclosureOriginalMortgageAmount", c => c.Double());
            AddColumn("dbo.PaperCommercialAssets", "ForeclosureOriginalMortageDate", c => c.DateTime());
            AddColumn("dbo.PaperCommercialAssets", "ForeclosureSaleDate", c => c.DateTime());
            AddColumn("dbo.PaperCommercialAssets", "ForeclosureRecordDate", c => c.DateTime());
            AddColumn("dbo.PaperCommercialAssets", "ElectricMeterMethod", c => c.Int(nullable: false));
            AddColumn("dbo.PaperCommercialAssets", "GasMeterMethod", c => c.Int(nullable: false));
            AddColumn("dbo.PaperCommercialAssets", "OccupancyPercentage", c => c.Single(nullable: false));
            AddColumn("dbo.PaperCommercialAssets", "LastReportedDate", c => c.DateTime());
            AddColumn("dbo.PaperCommercialAssets", "TotalUnits", c => c.Int(nullable: false));
            AddColumn("dbo.PaperCommercialAssets", "CoveredParkingSpaces", c => c.Int(nullable: false));
            AddColumn("dbo.PaperCommercialAssets", "ParkingSpaces", c => c.Int(nullable: false));
            AddColumn("dbo.PaperCommercialAssets", "RecentUpgradesRenovations", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "AdditionalInformation", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "NeededMaintenance", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "IsNoteWRAP", c => c.Boolean());
            AddColumn("dbo.RealEstateCommercialAssets", "OperatingStatus", c => c.Int(nullable: false));
            AddColumn("dbo.RealEstateCommercialAssets", "ProjectName", c => c.String());
            AddColumn("dbo.RealEstateCommercialAssets", "LotNumber", c => c.String());
            AddColumn("dbo.RealEstateCommercialAssets", "Subdivision", c => c.String());
            AddColumn("dbo.RealEstateCommercialAssets", "TaxBookMap", c => c.String());
            AddColumn("dbo.RealEstateCommercialAssets", "PropertyCondition", c => c.Int(nullable: false));
            AddColumn("dbo.RealEstateCommercialAssets", "GradeClassification", c => c.String());
            AddColumn("dbo.RealEstateCommercialAssets", "OccupancyType", c => c.Int(nullable: false));
            AddColumn("dbo.RealEstateCommercialAssets", "YearBuilt", c => c.Int(nullable: false));
            AddColumn("dbo.RealEstateCommercialAssets", "BuildingsCount", c => c.Double(nullable: false));
            AddColumn("dbo.RealEstateCommercialAssets", "CurrentBpo", c => c.Double(nullable: false));
            AddColumn("dbo.RealEstateCommercialAssets", "HasIncome", c => c.Boolean(nullable: false));
            AddColumn("dbo.RealEstateCommercialAssets", "ProformaAnnualIncome", c => c.Double(nullable: false));
            AddColumn("dbo.RealEstateCommercialAssets", "ProformaMonthlyIncome", c => c.Double(nullable: false));
            AddColumn("dbo.RealEstateCommercialAssets", "ProformaVacancyFac", c => c.Double(nullable: false));
            AddColumn("dbo.RealEstateCommercialAssets", "ProformaAnnualOperExpenses", c => c.Double(nullable: false));
            AddColumn("dbo.RealEstateCommercialAssets", "isPendingForeclosure", c => c.Boolean(nullable: false));
            AddColumn("dbo.RealEstateCommercialAssets", "ForeclosureLender", c => c.String());
            AddColumn("dbo.RealEstateCommercialAssets", "ForeclosurePosition", c => c.Int(nullable: false));
            AddColumn("dbo.RealEstateCommercialAssets", "ForeclosureRecordNumber", c => c.String());
            AddColumn("dbo.RealEstateCommercialAssets", "ForeclosureOriginalMortgageAmount", c => c.Double());
            AddColumn("dbo.RealEstateCommercialAssets", "ForeclosureOriginalMortageDate", c => c.DateTime());
            AddColumn("dbo.RealEstateCommercialAssets", "ForeclosureSaleDate", c => c.DateTime());
            AddColumn("dbo.RealEstateCommercialAssets", "ForeclosureRecordDate", c => c.DateTime());
            AddColumn("dbo.RealEstateCommercialAssets", "ElectricMeterMethod", c => c.Int(nullable: false));
            AddColumn("dbo.RealEstateCommercialAssets", "GasMeterMethod", c => c.Int(nullable: false));
            AddColumn("dbo.RealEstateCommercialAssets", "OccupancyPercentage", c => c.Single(nullable: false));
            AddColumn("dbo.RealEstateCommercialAssets", "LastReportedDate", c => c.DateTime());
            AddColumn("dbo.RealEstateCommercialAssets", "TotalUnits", c => c.Int(nullable: false));
            AddColumn("dbo.RealEstateCommercialAssets", "CoveredParkingSpaces", c => c.Int(nullable: false));
            AddColumn("dbo.RealEstateCommercialAssets", "ParkingSpaces", c => c.Int(nullable: false));
            AddColumn("dbo.RealEstateCommercialAssets", "Type", c => c.Int(nullable: false));
            AddColumn("dbo.RealEstateCommercialAssets", "NumberOfTenants", c => c.Int(nullable: false));
            AddColumn("dbo.RealEstateCommercialAssets", "HasAAARatedMajorTenant", c => c.Boolean(nullable: false));
            AddColumn("dbo.RealEstateCommercialAssets", "NameOfAAARatedMajorTenant", c => c.String());
            AddColumn("dbo.RealEstateCommercialAssets", "NumberofSuites", c => c.Int(nullable: false));
            AddColumn("dbo.RealEstateCommercialAssets", "VacantSuites", c => c.Int(nullable: false));
            DropColumn("dbo.Assets", "PaperType");
            DropColumn("dbo.Assets", "PaperPropertyType");
            DropColumn("dbo.Assets", "PaperServicingAgent");
            DropColumn("dbo.Assets", "PaperAssignor");
            DropColumn("dbo.Assets", "PaperPrincipalBalance");
            DropColumn("dbo.Assets", "PaperAskingPrice");
            DropColumn("dbo.Assets", "PaperApyForAskingPrice");
            DropColumn("dbo.Assets", "PaperMonthlyInterestIncome");
            DropColumn("dbo.Assets", "PaperEquityMargin");
            DropColumn("dbo.Assets", "PaperMonthsInArrears");
            DropColumn("dbo.Assets", "PaperMaturityDate");
            DropColumn("dbo.Assets", "PaperNextDueDate");
            DropColumn("dbo.Assets", "PaperOriginationDate");
            DropColumn("dbo.Assets", "PriorityMortgageBalance");
            DropColumn("dbo.Assets", "PaperOriginalInstrDocument");
            DropColumn("dbo.Assets", "PaperCurrent");
            DropColumn("dbo.Assets", "PaperNoteRate");
            DropColumn("dbo.Assets", "PaperInvestmentYield");
            DropColumn("dbo.Assets", "PaperPriority");
            DropColumn("dbo.Assets", "PaperLtv");
            DropColumn("dbo.Assets", "PaperCltv");
            DropColumn("dbo.Assets", "PaperSuccessor");
            DropColumn("dbo.Assets", "PaperSuccessorAddress");
            DropColumn("dbo.Assets", "PaperSuccessorRecordedDocNumber");
            DropColumn("dbo.Assets", "PaperSuccessorDocDate");
            DropColumn("dbo.Assets", "PaperSuccessorType");
            DropColumn("dbo.Assets", "PaperTrustor");
            DropColumn("dbo.Assets", "PaperTrustee");
            DropColumn("dbo.PaperCommercialAssets", "BeneficiaryName");
            DropColumn("dbo.PaperCommercialAssets", "BeneficiaryFullName");
            DropColumn("dbo.PaperCommercialAssets", "BeneficiaryContactAddress");
            DropColumn("dbo.PaperCommercialAssets", "BeneficiaryCity");
            DropColumn("dbo.PaperCommercialAssets", "BeneficiaryState");
            DropColumn("dbo.PaperCommercialAssets", "BeneficiaryZip");
            DropColumn("dbo.PaperCommercialAssets", "BeneficiaryPhoneHome");
            DropColumn("dbo.PaperCommercialAssets", "BeneficiaryPhoneCell");
            DropColumn("dbo.PaperCommercialAssets", "BeneficiaryPhoneWork");
            DropColumn("dbo.PaperCommercialAssets", "BeneficiaryFax");
            DropColumn("dbo.PaperCommercialAssets", "BeneficiaryEmail");
            DropColumn("dbo.PaperCommercialAssets", "BeneficiaryAccountNumber");
            DropColumn("dbo.RealEstateCommercialAssets", "NumberOfApartments");
            DropColumn("dbo.RealEstateCommercialAssets", "EfficiencyApartment");
            DropColumn("dbo.RealEstateCommercialAssets", "EfficiencyApartmentRentRate");
            DropColumn("dbo.RealEstateCommercialAssets", "OneBedroom");
            DropColumn("dbo.RealEstateCommercialAssets", "OneBedroomRentRate");
            DropColumn("dbo.RealEstateCommercialAssets", "TwoBedroom");
            DropColumn("dbo.RealEstateCommercialAssets", "TwoBedroomRentRate");
            DropColumn("dbo.RealEstateCommercialAssets", "ThreeBedroom");
            DropColumn("dbo.RealEstateCommercialAssets", "ThreeBedroomRentRate");
            //DropTable("dbo.AssetListingAgents");
        }
        
        public override void Down()
        {
            //CreateTable(
            //    "dbo.AssetListingAgents",
            //    c => new
            //        {
            //            AssetListingAgentId = c.Int(nullable: false, identity: true),
            //            AssetId = c.Guid(nullable: false),
            //            ListingAgentCompany = c.String(),
            //            ListingAgentName = c.String(),
            //            ListingAgentEmail = c.String(),
            //            ListingAgentPhoneNumber = c.String(),
            //            ListingAgentCorpAddress = c.String(),
            //            ListingAgentCommissionAmount = c.String(),
            //            ListingAgentNewName = c.String(),
            //            ListingAgentWorkNumber = c.String(),
            //            ListingAgentCellNumber = c.String(),
            //            ListingAgentFaxNumber = c.String(),
            //            NarMemberId = c.Int(),
            //            CommissionShareAgr = c.Boolean(nullable: false),
            //            DateOfCsaConfirm = c.DateTime(),
            //        })
            //    .PrimaryKey(t => t.AssetListingAgentId);
            
            AddColumn("dbo.RealEstateCommercialAssets", "ThreeBedroomRentRate", c => c.Int());
            AddColumn("dbo.RealEstateCommercialAssets", "ThreeBedroom", c => c.Int());
            AddColumn("dbo.RealEstateCommercialAssets", "TwoBedroomRentRate", c => c.Int());
            AddColumn("dbo.RealEstateCommercialAssets", "TwoBedroom", c => c.Int());
            AddColumn("dbo.RealEstateCommercialAssets", "OneBedroomRentRate", c => c.Int());
            AddColumn("dbo.RealEstateCommercialAssets", "OneBedroom", c => c.Int());
            AddColumn("dbo.RealEstateCommercialAssets", "EfficiencyApartmentRentRate", c => c.Int());
            AddColumn("dbo.RealEstateCommercialAssets", "EfficiencyApartment", c => c.Int());
            AddColumn("dbo.RealEstateCommercialAssets", "NumberOfApartments", c => c.Int());
            AddColumn("dbo.PaperCommercialAssets", "BeneficiaryAccountNumber", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "BeneficiaryEmail", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "BeneficiaryFax", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "BeneficiaryPhoneWork", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "BeneficiaryPhoneCell", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "BeneficiaryPhoneHome", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "BeneficiaryZip", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "BeneficiaryState", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "BeneficiaryCity", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "BeneficiaryContactAddress", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "BeneficiaryFullName", c => c.String());
            AddColumn("dbo.PaperCommercialAssets", "BeneficiaryName", c => c.String());
            AddColumn("dbo.Assets", "PaperTrustee", c => c.String());
            AddColumn("dbo.Assets", "PaperTrustor", c => c.String());
            AddColumn("dbo.Assets", "PaperSuccessorType", c => c.String());
            AddColumn("dbo.Assets", "PaperSuccessorDocDate", c => c.String());
            AddColumn("dbo.Assets", "PaperSuccessorRecordedDocNumber", c => c.String());
            AddColumn("dbo.Assets", "PaperSuccessorAddress", c => c.String());
            AddColumn("dbo.Assets", "PaperSuccessor", c => c.String());
            AddColumn("dbo.Assets", "PaperCltv", c => c.Single());
            AddColumn("dbo.Assets", "PaperLtv", c => c.Single());
            AddColumn("dbo.Assets", "PaperPriority", c => c.Int(nullable: false));
            AddColumn("dbo.Assets", "PaperInvestmentYield", c => c.Single());
            AddColumn("dbo.Assets", "PaperNoteRate", c => c.Single());
            AddColumn("dbo.Assets", "PaperCurrent", c => c.Boolean(nullable: false));
            AddColumn("dbo.Assets", "PaperOriginalInstrDocument", c => c.String());
            AddColumn("dbo.Assets", "PriorityMortgageBalance", c => c.Int());
            AddColumn("dbo.Assets", "PaperOriginationDate", c => c.DateTime());
            AddColumn("dbo.Assets", "PaperNextDueDate", c => c.DateTime());
            AddColumn("dbo.Assets", "PaperMaturityDate", c => c.DateTime());
            AddColumn("dbo.Assets", "PaperMonthsInArrears", c => c.Int());
            AddColumn("dbo.Assets", "PaperEquityMargin", c => c.Int());
            AddColumn("dbo.Assets", "PaperMonthlyInterestIncome", c => c.Double());
            AddColumn("dbo.Assets", "PaperApyForAskingPrice", c => c.Single());
            AddColumn("dbo.Assets", "PaperAskingPrice", c => c.Int());
            AddColumn("dbo.Assets", "PaperPrincipalBalance", c => c.Int());
            AddColumn("dbo.Assets", "PaperAssignor", c => c.String());
            AddColumn("dbo.Assets", "PaperServicingAgent", c => c.String());
            AddColumn("dbo.Assets", "PaperPropertyType", c => c.Int(nullable: false));
            AddColumn("dbo.Assets", "PaperType", c => c.Int(nullable: false));
            DropColumn("dbo.RealEstateCommercialAssets", "VacantSuites");
            DropColumn("dbo.RealEstateCommercialAssets", "NumberofSuites");
            DropColumn("dbo.RealEstateCommercialAssets", "NameOfAAARatedMajorTenant");
            DropColumn("dbo.RealEstateCommercialAssets", "HasAAARatedMajorTenant");
            DropColumn("dbo.RealEstateCommercialAssets", "NumberOfTenants");
            DropColumn("dbo.RealEstateCommercialAssets", "Type");
            DropColumn("dbo.RealEstateCommercialAssets", "ParkingSpaces");
            DropColumn("dbo.RealEstateCommercialAssets", "CoveredParkingSpaces");
            DropColumn("dbo.RealEstateCommercialAssets", "TotalUnits");
            DropColumn("dbo.RealEstateCommercialAssets", "LastReportedDate");
            DropColumn("dbo.RealEstateCommercialAssets", "OccupancyPercentage");
            DropColumn("dbo.RealEstateCommercialAssets", "GasMeterMethod");
            DropColumn("dbo.RealEstateCommercialAssets", "ElectricMeterMethod");
            DropColumn("dbo.RealEstateCommercialAssets", "ForeclosureRecordDate");
            DropColumn("dbo.RealEstateCommercialAssets", "ForeclosureSaleDate");
            DropColumn("dbo.RealEstateCommercialAssets", "ForeclosureOriginalMortageDate");
            DropColumn("dbo.RealEstateCommercialAssets", "ForeclosureOriginalMortgageAmount");
            DropColumn("dbo.RealEstateCommercialAssets", "ForeclosureRecordNumber");
            DropColumn("dbo.RealEstateCommercialAssets", "ForeclosurePosition");
            DropColumn("dbo.RealEstateCommercialAssets", "ForeclosureLender");
            DropColumn("dbo.RealEstateCommercialAssets", "isPendingForeclosure");
            DropColumn("dbo.RealEstateCommercialAssets", "ProformaAnnualOperExpenses");
            DropColumn("dbo.RealEstateCommercialAssets", "ProformaVacancyFac");
            DropColumn("dbo.RealEstateCommercialAssets", "ProformaMonthlyIncome");
            DropColumn("dbo.RealEstateCommercialAssets", "ProformaAnnualIncome");
            DropColumn("dbo.RealEstateCommercialAssets", "HasIncome");
            DropColumn("dbo.RealEstateCommercialAssets", "CurrentBpo");
            DropColumn("dbo.RealEstateCommercialAssets", "BuildingsCount");
            DropColumn("dbo.RealEstateCommercialAssets", "YearBuilt");
            DropColumn("dbo.RealEstateCommercialAssets", "OccupancyType");
            DropColumn("dbo.RealEstateCommercialAssets", "GradeClassification");
            DropColumn("dbo.RealEstateCommercialAssets", "PropertyCondition");
            DropColumn("dbo.RealEstateCommercialAssets", "TaxBookMap");
            DropColumn("dbo.RealEstateCommercialAssets", "Subdivision");
            DropColumn("dbo.RealEstateCommercialAssets", "LotNumber");
            DropColumn("dbo.RealEstateCommercialAssets", "ProjectName");
            DropColumn("dbo.RealEstateCommercialAssets", "OperatingStatus");
            DropColumn("dbo.PaperCommercialAssets", "IsNoteWRAP");
            DropColumn("dbo.PaperCommercialAssets", "NeededMaintenance");
            DropColumn("dbo.PaperCommercialAssets", "AdditionalInformation");
            DropColumn("dbo.PaperCommercialAssets", "RecentUpgradesRenovations");
            DropColumn("dbo.PaperCommercialAssets", "ParkingSpaces");
            DropColumn("dbo.PaperCommercialAssets", "CoveredParkingSpaces");
            DropColumn("dbo.PaperCommercialAssets", "TotalUnits");
            DropColumn("dbo.PaperCommercialAssets", "LastReportedDate");
            DropColumn("dbo.PaperCommercialAssets", "OccupancyPercentage");
            DropColumn("dbo.PaperCommercialAssets", "GasMeterMethod");
            DropColumn("dbo.PaperCommercialAssets", "ElectricMeterMethod");
            DropColumn("dbo.PaperCommercialAssets", "ForeclosureRecordDate");
            DropColumn("dbo.PaperCommercialAssets", "ForeclosureSaleDate");
            DropColumn("dbo.PaperCommercialAssets", "ForeclosureOriginalMortageDate");
            DropColumn("dbo.PaperCommercialAssets", "ForeclosureOriginalMortgageAmount");
            DropColumn("dbo.PaperCommercialAssets", "ForeclosureRecordNumber");
            DropColumn("dbo.PaperCommercialAssets", "ForeclosurePosition");
            DropColumn("dbo.PaperCommercialAssets", "ForeclosureLender");
            DropColumn("dbo.PaperCommercialAssets", "isPendingForeclosure");
            DropColumn("dbo.PaperCommercialAssets", "ProformaAnnualOperExpenses");
            DropColumn("dbo.PaperCommercialAssets", "ProformaVacancyFac");
            DropColumn("dbo.PaperCommercialAssets", "ProformaMonthlyIncome");
            DropColumn("dbo.PaperCommercialAssets", "ProformaAnnualIncome");
            DropColumn("dbo.PaperCommercialAssets", "HasIncome");
            DropColumn("dbo.PaperCommercialAssets", "CurrentBpo");
            DropColumn("dbo.PaperCommercialAssets", "BuildingsCount");
            DropColumn("dbo.PaperCommercialAssets", "OccupancyType");
            DropColumn("dbo.PaperCommercialAssets", "GradeClassification");
            DropColumn("dbo.PaperCommercialAssets", "PropertyCondition");
            DropColumn("dbo.PaperCommercialAssets", "TaxBookMap");
            DropColumn("dbo.PaperCommercialAssets", "Subdivision");
            DropColumn("dbo.PaperCommercialAssets", "LotNumber");
            DropColumn("dbo.PaperCommercialAssets", "ProjectName");
            DropColumn("dbo.PaperCommercialAssets", "OperatingStatus");
            DropColumn("dbo.PaperCommercialAssets", "VacantSuites");
            DropColumn("dbo.PaperCommercialAssets", "NumberofSuites");
            DropColumn("dbo.PaperCommercialAssets", "NameOfAAARatedMajorTenant");
            DropColumn("dbo.PaperCommercialAssets", "HasAAARatedMajorTenant");
            DropColumn("dbo.PaperCommercialAssets", "NumberOfTenants");
            DropColumn("dbo.PaperCommercialAssets", "Type");
            DropColumn("dbo.PaperCommercialAssets", "HasProformaInformation");
            DropColumn("dbo.PaperCommercialAssets", "SecuringPropertyCounty");
            DropColumn("dbo.PaperCommercialAssets", "NumberOfMissedPayments");
            DropColumn("dbo.PaperCommercialAssets", "MortgageAdjustIfARM");
            DropColumn("dbo.PaperCommercialAssets", "IsMortgageAnARM");
            DropColumn("dbo.PaperCommercialAssets", "InterestRate");
            DropColumn("dbo.PaperCommercialAssets", "PaymentIncludes");
            DropColumn("dbo.PaperCommercialAssets", "MonthlyPayment");
            DropColumn("dbo.PaperCommercialAssets", "CurrentPrincipalBalance");
            DropColumn("dbo.PaperCommercialAssets", "TypeOfMortgage");
            DropColumn("dbo.PaperCommercialAssets", "AccountNumber");
            DropColumn("dbo.PaperCommercialAssets", "LenderPhoneOther");
            DropColumn("dbo.PaperCommercialAssets", "LenderPhone");
            DropColumn("dbo.PaperCommercialAssets", "MortgageCompanyZip");
            DropColumn("dbo.PaperCommercialAssets", "MortgageCompanyState");
            DropColumn("dbo.PaperCommercialAssets", "MortgageCompanyCity");
            DropColumn("dbo.PaperCommercialAssets", "MortgageCompanyAddress");
            DropColumn("dbo.PaperCommercialAssets", "FirstMortgageCompany");
            DropColumn("dbo.PaperCommercialAssets", "PropertyZip");
            DropColumn("dbo.PaperCommercialAssets", "PropertyState");
            DropColumn("dbo.PaperCommercialAssets", "PropertyCity");
            DropColumn("dbo.PaperCommercialAssets", "PropertyAddress");
            DropColumn("dbo.PaperCommercialAssets", "TaxAssessorNumberOther");
            DropColumn("dbo.PaperCommercialAssets", "TaxAssessorNumber");
            DropColumn("dbo.PaperCommercialAssets", "PropertyCounty");
            DropColumn("dbo.PaperCommercialAssets", "EmailAddress");
            DropColumn("dbo.PaperCommercialAssets", "Fax");
            DropColumn("dbo.PaperCommercialAssets", "CellPhone");
            DropColumn("dbo.PaperCommercialAssets", "WorkPhone");
            DropColumn("dbo.PaperCommercialAssets", "CorporateName");
            DropColumn("dbo.PaperCommercialAssets", "NameOfCoPrincipal");
            DropColumn("dbo.PaperCommercialAssets", "NameOfPrincipal");
            DropColumn("dbo.Assets", "EnvironmentalIssues");
            DropColumn("dbo.Assets", "HasEnvironmentalIssues");
            DropColumn("dbo.Assets", "AgentZip");
            DropColumn("dbo.Assets", "AgentState");
            DropColumn("dbo.Assets", "AgentCity");
            DropColumn("dbo.Assets", "AgentAddress");
            DropColumn("dbo.Assets", "AuthorizeForwardPaymentHistory");
            DropColumn("dbo.Assets", "AgentContactPerson");
            DropColumn("dbo.Assets", "AgentAccountNumber");
            DropColumn("dbo.Assets", "AgentEmail");
            DropColumn("dbo.Assets", "AgentPhone");
            DropColumn("dbo.Assets", "AgentName");
            DropColumn("dbo.Assets", "NoteServicedByAgent");
            DropColumn("dbo.Assets", "SecondMortgagePaymentWRAP");
            DropColumn("dbo.Assets", "SecondInterestRateWRAP");
            DropColumn("dbo.Assets", "SecondMortgageBalanceWRAP");
            DropColumn("dbo.Assets", "FirstMortgagePaymentWRAP");
            DropColumn("dbo.Assets", "FirstInterestRateWRAP");
            DropColumn("dbo.Assets", "FirstmortgageBalanceWRAP");
            DropColumn("dbo.Assets", "TotalMonthlyPaymentWRAP");
            DropColumn("dbo.Assets", "OriginalPrincipalBalanceWRAP");
            DropColumn("dbo.Assets", "IsNoteWRAP");
            DropColumn("dbo.Assets", "SellerCarryNoteCashDown");
            DropColumn("dbo.Assets", "SellerCarryNotePrice");
            DropColumn("dbo.Assets", "SellerCarryNoteSalesDate");
            DropColumn("dbo.Assets", "PaymentHistory");
            DropColumn("dbo.Assets", "WasPropertyDistressed");
            DropColumn("dbo.Assets", "SecuringPropertyAppraisal");
            DropColumn("dbo.Assets", "NextPaymentOnNote");
            DropColumn("dbo.Assets", "LastPaymentRecievedOnNote");
            DropColumn("dbo.Assets", "IsNoteCurrent");
            DropColumn("dbo.Assets", "PaymentsRemainingOnNote");
            DropColumn("dbo.Assets", "PaymentsMadeOnNote");
            DropColumn("dbo.Assets", "AmortType");
            DropColumn("dbo.Assets", "TypeOfMTGInstrument");
            DropColumn("dbo.Assets", "BalloonDateOfNote");
            DropColumn("dbo.Assets", "PaymentFrequency");
            DropColumn("dbo.Assets", "PaymentAmount");
            DropColumn("dbo.Assets", "NoteInterestRate");
            DropColumn("dbo.Assets", "TypeOfNote");
            DropColumn("dbo.Assets", "MethodOfAppraisal");
            DropColumn("dbo.Assets", "HasCopyOfAppraisal");
            DropColumn("dbo.Assets", "CurrentNotePrincipal");
            DropColumn("dbo.Assets", "BPOOfProperty");
            DropColumn("dbo.Assets", "NotePrincipal");
            DropColumn("dbo.Assets", "NoteOrigination");
            //CreateIndex("dbo.AssetListingAgents", "NarMemberId");
            //CreateIndex("dbo.AssetListingAgents", "AssetId");
            //AddForeignKey("dbo.AssetListingAgents", "AssetId", "dbo.Assets", "AssetId");
            //AddForeignKey("dbo.AssetListingAgents", "NarMemberId", "dbo.NARMembers", "NarMemberId");
        }
    }
}
