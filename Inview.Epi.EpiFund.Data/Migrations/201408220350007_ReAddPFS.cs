namespace Inview.Epi.EpiFund.Data.Migrations
{
    using System;
    using System.Data.Entity.Migrations;
    
    public partial class ReAddPFS : DbMigration
    {
        public override void Up()
        {
            CreateTable(
                "dbo.PersonalFinancialStatements",
                c => new
                    {
                        PersonalFinancialStatementId = c.Int(nullable: false, identity: true),
                        ExecutionDate = c.DateTime(nullable: false),
                        UserId = c.Int(nullable: false),
                        AssetCashOnHand = c.String(),
                        AssetSavingsAccount = c.String(),
                        AssetIRA = c.String(),
                        AssetAccountsReceivable = c.String(),
                        AssetLifeInsurance = c.String(),
                        AssetStocks = c.String(),
                        AssetRealEstate = c.String(),
                        AssetAutomobiles = c.String(),
                        AssetOtherPersonalProperty = c.String(),
                        AssetOtherAssets = c.String(),
                        LiabilityAccountsPayable = c.String(),
                        LiabilityNotesPayable = c.String(),
                        LiabilityInstallmentAccountAuto = c.String(),
                        LiabilityMonthlyPayments = c.String(),
                        LiabilityInstallmentAccountOther = c.String(),
                        LiabilityMonthlyPayment = c.String(),
                        LiabilityLoanOnLifeInsurance = c.String(),
                        LiabilityMortgagesOnRealEstate = c.String(),
                        LiabilityUnpaidTaxes = c.String(),
                        LiabilityOtherLiabilities = c.String(),
                        LiabilityTotalLiabilities = c.String(),
                        LiabilityNetWorth = c.String(),
                        ContingentAsEndorser = c.String(),
                        ContingentLegalClaims = c.String(),
                        ContingentProvisions = c.String(),
                        ContingentOtherSpecialDebt = c.String(),
                        Salary = c.String(),
                        RealEstateIncome = c.String(),
                        OtherIncome = c.String(),
                        DescriptionOfOtherIncome1 = c.String(),
                        DescriptionOfOtherIncome2 = c.String(),
                        DescriptionOfOtherIncome3 = c.String(),
                        NotesPayableName = c.String(),
                        NotesPayableOriginalBalance = c.String(),
                        NotesPayableCurrentBalance = c.String(),
                        NotesPayableFrequency = c.String(),
                        NotesPayableSecuredOrEndorsed = c.String(),
                        NotesPayableName2 = c.String(),
                        NotesPayableOriginalBalance2 = c.String(),
                        NotesPayableCurrentBalance2 = c.String(),
                        NotesPayableFrequency2 = c.String(),
                        NotesPayableSecuredOrEndorsed2 = c.String(),
                        NotesPayableName3 = c.String(),
                        NotesPayableOriginalBalance3 = c.String(),
                        NotesPayableCurrentBalance3 = c.String(),
                        NotesPayableFrequency3 = c.String(),
                        NotesPayableSecuredOrEndorsed3 = c.String(),
                        NotesPayableName4 = c.String(),
                        NotesPayableOriginalBalance4 = c.String(),
                        NotesPayableCurrentBalance4 = c.String(),
                        NotesPayableFrequency4 = c.String(),
                        NotesPayableSecuredOrEndorsed4 = c.String(),
                        NotesPayableName5 = c.String(),
                        NotesPayableOriginalBalance5 = c.String(),
                        NotesPayableCurrentBalance5 = c.String(),
                        NotesPayableFrequency5 = c.String(),
                        NotesPayableSecuredOrEndorsed5 = c.String(),
                        StocksNumberOfShares = c.String(),
                        StocksNameOfSecurities = c.String(),
                        StocksCost = c.String(),
                        StocksMarketValue = c.String(),
                        StocksTotalValue = c.String(),
                        StocksDateOfQuotation = c.DateTime(),
                        StocksMarketValue2 = c.String(),
                        StocksTotalValue2 = c.String(),
                        StocksNumberOfShares2 = c.String(),
                        StocksNameOfSecurities2 = c.String(),
                        StocksCost2 = c.String(),
                        StocksDateOfQuotation2 = c.DateTime(),
                        StocksTotalValue3 = c.String(),
                        StocksNumberOfShares3 = c.String(),
                        StocksNameOfSecurities3 = c.String(),
                        StocksCost3 = c.String(),
                        StocksMarketValue3 = c.String(),
                        StocksDateOfQuotation3 = c.DateTime(),
                        StocksTotalValue4 = c.String(),
                        StocksNumberOfShares4 = c.String(),
                        StocksNameOfSecurities4 = c.String(),
                        StocksCost4 = c.String(),
                        StocksMarketValue4 = c.String(),
                        StocksDateOfQuotation4 = c.DateTime(),
                        RealEstateOwnedTypeOfRealEstatePropertyA = c.String(),
                        RealEstateOwnedAddressPropertyA = c.String(),
                        RealEstateOwnedDatePurchasedPropertyA = c.String(),
                        RealEstateOwnedPresentMarketValuePropertyA = c.String(),
                        RealEstateOwnedNameAndAddressPropertyA = c.String(),
                        RealEstateOwnedMortgageAccountNumberPropertyA = c.String(),
                        RealEstateOwnedMortgageBalancePropertyA = c.String(),
                        RealEstateOwnedAmountOfPaymentPerMonthPropertyA = c.String(),
                        RealEstateOwnedStatusOfMortgagePropertyA = c.String(),
                        RealEstateOwnedTypeOfRealEstatePropertyB = c.String(),
                        RealEstateOwnedAddressPropertyB = c.String(),
                        RealEstateOwnedDatePurchasedPropertyB = c.String(),
                        RealEstateOwnedPresentMarketValuePropertyB = c.String(),
                        RealEstateOwnedNameAndAddressPropertyB = c.String(),
                        RealEstateOwnedMortgageAccountNumberPropertyB = c.String(),
                        RealEstateOwnedMortgageBalancePropertyB = c.String(),
                        RealEstateOwnedAmountOfPaymentPerMonthPropertyB = c.String(),
                        RealEstateOwnedStatusOfMortgagePropertyB = c.String(),
                        RealEstateOwnedTypeOfRealEstatePropertyC = c.String(),
                        RealEstateOwnedAddressPropertyC = c.String(),
                        RealEstateOwnedDatePurchasedPropertyC = c.String(),
                        RealEstateOwnedPresentMarketValuePropertyC = c.String(),
                        RealEstateOwnedNameAndAddressPropertyC = c.String(),
                        RealEstateOwnedMortgageAccountNumberPropertyC = c.String(),
                        RealEstateOwnedMortgageBalancePropertyC = c.String(),
                        RealEstateOwnedAmountOfPaymentPerMonthPropertyC = c.String(),
                        RealEstateOwnedStatusOfMortgagePropertyC = c.String(),
                        OtherPersonalPropertyAndOtherAssets = c.String(),
                        UnpaidTaxes = c.String(),
                        OtherLiabilities = c.String(),
                        LifeInsuranceHeld = c.String(),
                        SocialSecurityNumber = c.String(),
                        FileLocation = c.String(),
                    })
                .PrimaryKey(t => t.PersonalFinancialStatementId)
                .ForeignKey("dbo.Users", t => t.UserId)
                .Index(t => t.UserId);
            
        }
        
        public override void Down()
        {
            DropForeignKey("dbo.PersonalFinancialStatements", "UserId", "dbo.Users");
            DropIndex("dbo.PersonalFinancialStatements", new[] { "UserId" });
            DropTable("dbo.PersonalFinancialStatements");
        }
    }
}
