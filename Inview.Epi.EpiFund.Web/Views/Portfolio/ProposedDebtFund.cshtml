@model Inview.Epi.EpiFund.Domain.ViewModel.PortfolioViewModel
@using MVCVideo
@using Inview.Epi.EpiFund.Domain.ViewModel
@using Inview.Epi.EpiFund.Domain.Helpers
@{
    ViewBag.Title = "Proposed Debt Fund Calculator";
    ViewBag.IsAssetView = false;
    List<MVCVideo.VideoOptions> videoOptions = ViewBag.Videos as List<MVCVideo.VideoOptions>;

    MultiFamilyAssetViewModel mfAsset = new MultiFamilyAssetViewModel();
    CommercialAssetViewModel cAsset = new CommercialAssetViewModel();

    foreach (var AssetViewModel in Model.PortfolioProperties)
    {

        if (AssetViewModel.GetType() == typeof(MultiFamilyAssetViewModel))
        {
            mfAsset = (AssetViewModel as MultiFamilyAssetViewModel);
        }
        else if (Model.GetType() == typeof(CommercialAssetViewModel))
        {
            cAsset = (AssetViewModel as CommercialAssetViewModel);
        }

    }
}
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>USCREonline.com : @ViewBag.Title</title>
    <link rel="stylesheet" href="@Url.Content("~/content/css/ProgressBar.css")" />
    <link rel="stylesheet" href="@Url.Content("~/content/bootstrap.min.css")" />
    <link rel="stylesheet" href="@Url.Content("~/content/css/font-awesome.min.css")" />
    <link rel="stylesheet" href="@Url.Content("~/content/bootstrap-lightbox.min.css")" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    @Styles.Render("~/bundles/css")
    @Styles.Render("~/bundles/themes/base/css")
    <link rel="stylesheet" href="@Url.Content("~/content/responsive.css")" />
    @Scripts.Render("~/bundles/modernizr")
    <script type="text/javascript">
        var $buoop = {};
        $buoop.ol = window.onload;
        window.onload = function () {
            try { if ($buoop.ol) $buoop.ol(); } catch (e) { }
            var e = document.createElement("script");
            e.setAttribute("type", "text/javascript");
            e.setAttribute("src", "//browser-update.org/update.js");
            document.body.appendChild(e);
            setInterval(KeepSessionAlive, 30000);
        }

        function KeepSessionAlive() {
            //$.post("/Home/KeepSessionAlive", null, function () {
            //});
        }
    </script>
    <style type="text/css">
        #eqcalc {
        }

        .blueText {
            color: #369;
            font-weight: bold;
        }

        .calculator {
            position: absolute;
            top: 122px;
            left: 396px;
            background-color: white;
            z-index: 100;
            width: 400px;
        }

        .container.fund-calculator {
            background-color: #fff !important;
            min-width: 600px;
            padding: 20px 60px !important;
        }

        h5 {
            margin-bottom: 20px;            
        }

        input[type="radio"] {
            margin-right: 5px;        
        }

        input[type="text"].form-control {
            height: 26px;
            font-size: 12px;
        }

        .well .row {
            margin-bottom: 20px;
        }

        .well .row label {
            margin-bottom: 0;    
        }

        select.form-control[disabled] {
            border: 1px solid #B1A795;
            height: 26px;
            padding: 0;
            font-size: 12px;
        }

        select.form-control {
            border: 1px solid #B1A795;
            height: 26px;
            padding: 0;
            font-size: 12px;
        }

        input[type=date] {
            height: 26px;
            font-size: 12px;
            border: 1px solid #B1A795;
        }

    </style>
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <!--[if lt IE 7]>
            <p class="chromeframe">You are using an <strong>outdated</strong> browser. Please <a href="http://browsehappy.com/">upgrade your browser</a> or <a href="http://www.google.com/chromeframe/?redirect=true">activate Google Chrome Frame</a> to improve your experience.</p>
        <![endif]-->
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryui")
    <script src="@Url.Content("/Scripts/bootstrap.js")"></script>
    <script src="@Url.Content("/Scripts/jquery-guid.js")"></script>

</head>

<div class="fund-calculator container" id="Dialog-Box">
    <div class="row">
        <div class="col-xs-6"> 
            <label class="control-label">Analysis is Based On:</label>
        </div>
        <div class="col-xs-6">
            <input type="hidden" value="@Model.PortfolioListedPrice" id="hdnListedPrice" />
            <input type="hidden" value="@Model.AccumulatedBPO" id="hdnAppraisal" />
            <input type="radio" id="radiobtn1" name="option" class="option" value="ListedPrice" />Listed Price
            <input type="radio" id="radiobtn2" name="option" class="option"  value="Appraisal" />
                <a title="[Calculated Market Value is based solely on either (1) comparable sales data provided by the Listing Agent or Seller in their Offering Memorandum, or, in the absence thereof, (2) calculated to the displayed CAP Rate only if the offering price for the asset is TBD by Market.]">CMV</a>
            </label>
        </div>
    </div>
<hr />
    <div class="row">
        <div class="col-xs-12">
            <h5>PROPOSED DEBT FUNDING DATA</h5>
        </div>
    </div>
    <div class="row">   
        <div class="col-xs-12">
            <div class="well">
                <div class="row">
                    <div class="col-xs-7">
                        <label class="control-label">Proposed Debt Funding Principal</label>
                    </div>
                    <div class="col-xs-5">
                        <input class="form-control" type="TEXT" name="proposedPrin" onchange="EquityCalculation()" onload="toMoney(this, true)" maxlength="10">
                        <span style="display: block; font-size: 9px; font-style: italic">Enter amount without comma’s or decimal points</span> 
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-7"> 
                        <label class="control-label">Lender - Proposed Interest Rate</label> 
                    </div>
                    <div class="col-xs-5">  
                        <input type="TEXT" class="form-control" name="lenderIntrest" onblur="calculateMonthlyPayment()" maxlength="10">
                        <span style="display: block; font-size: 9px; font-style: italic">Enter Number with Max of two decimal points</span> 
                    </div> 
                </div>
                <div class="row">
                    <div class="col-xs-7"> 
                        <label class="control-label">Proposed Amortization Schedule</label>
                        
                    </div>
                    <div class="col-xs-5">  
                        <select id="ddlAmortSchedule" class="form-control" onchange="calculateMonthlyPayment()">
                            <option value="0" selected="selected">0</option> 
                            <option value="10">10</option>
                            <option value="15">15</option>
                            <option value="20">20</option> 
                            <option value="25">25</option>
                            <option value="30">30</option>
                        </select>
                        <span style="display: block; font-size: 9px; font-style: italic">Options: 10, 15, 20, 25, 30, IO</span> 
                    </div>   
                </div>
                <div class="row">
                    <div class="col-xs-7">
                        <label class="control-label">Proposed/calculated Monthly Payment</label>
                    </div> 
                    <div class="col-xs-5">  
                        <input type="TEXT" class="form-control" name="monthlyPayment" onload="toMoney(this, true)">
                        <input type="TEXT" class="form-control" name="paymentType" readonly style="width: 40px">
                        <span style="display: block; font-size: 9px; font-style: italic">Options: IO, PI</span> 
                    </div> 
                </div>
                <div class="row">
                    <div class="col-xs-7"> 
                        <label class="control-label">Calculated Annual Debt Service</label>
                    </div>
                    <div class="col-xs-5">  
                        <input type="TEXT" class="form-control" name="annualDebt" onblur="toMoney(this, true)" maxlength="10">  
                    </div> 
                </div>
                <div class="row">
                    <div class="col-xs-7"> 
                        <label class="control-label">Is Proposed Funding Fixed or Adj?</label>
                    </div>  
                    <div class="col-xs-5">  
                        <select id="ddlFunding" class="form-control" onchange="selectFunding()">
                            <option value="0" selected="selected">---</option>
                            <option value="1" >Fixed</option>
                            <option value="2">Adjustable</option>
                        </select>
                    </div> 
                </div>
                <div class="row">
                     <div class="col-xs-7">
                        <label class="control-label">Proposed Debt Terms adjustment date</label>
                    </div>
                    <div class="col-xs-5">  
                        <input type="date" class="form-control" name="debtDate" />
                    </div> 
                </div>
                <div class="row">
                    <div class="col-xs-7">
                        <label class="control-label">Debt Funding proposed maturity date</label>
                    </div>
                    <div class="col-xs-5">  
                        <input type="date" class="form-control" name="maturityDate">
                        <span style="display: block; font-size: 9px; font-style: italic">(e.g., when proposed New Note Payoff is Due)</span> 
                    </div> 
                </div>
                <div class="row">
                    <div class="col-xs-7">
                        <label class="control-label">Proposed Debt Funding Partner</label>
                    </div>
                    <div class="col-xs-5">  
                        <input type="TEXT" class="form-control" name="fundingPartner" value ="@Model.MBAAgentName">
                        <span style="display: block; font-size: 9px; font-style: italic">Not Mandatory Data for Auto Calculation</span> 
                    </div>
                </div> 
            </div>
        </div>   
    </div>  
    <div class="row">
        <div class="col-xs-12">
            <h5>EQUITY CALCULATION</h5> 
        </div>
    </div>
    <div class="row">   
        <div class="col-xs-12">
            <div class="well">    
                <div class="row">
                    <div class="col-xs-7">
                        <label class="control-label" id="equityPrice"></label>
                    </div>
                    <div class="col-xs-5">  
                        <input type="TEXT" class="form-control" name="listedPrice" onblur="toMoney(this, true)" maxlength="10" readonly>
                    </div>    
                </div>
                <div class="row">
                    <div class="col-xs-7">
                        <label class="control-label">Proposed Debt Funding Principal</label>
                    </div>
                    <div class="col-xs-5">  
                        <input type="TEXT" class="form-control" name="proposedPrin1" onblur="toMoney(this, true)" maxlength="10">
                        <span style="display: block; font-size: 9px; font-style: italic">(Auto Filled as entered above by USC User)</span> 
                    </div>    
                </div>
                <div class="row">
                    <div class="col-xs-7"> 
                        <label class="control-label">Balance Acquisition (Cash Equity)</label>
                    </div>
                    <div class="col-xs-5">  
                        <input type="TEXT" class="form-control" name="balanceAcq" onblur="toMoney(this, true)" maxlength="10">
                        <span style="display: block; font-size: 9px; font-style: italic">Auto calculated</span> 
                    </div>    
                </div>
                <div class="row">
                    <div class="col-xs-7"> 
                       <label class="control-label">Cash Equity as Percentage of {LP/<a title="[Calculated Market Value is based solely on either (1) comparable sales data provided by the Listing Agent or Seller in their Offering Memorandum, or, in the absence thereof, (2) calculated to the displayed CAP Rate only if the offering price for the asset is TBD by Market.]">CMV}</a></label>
                    </div>
                    <div class="col-xs-5">  
                        <input type="TEXT" class="form-control" name="equityPer" style="width: calc(100% - 25px); margin-right: 5px; float: left;">
                        <span style="width: 20px; float: left; padding-top: 3px; text-align: center;">%</span>
                    </div>    
                </div>
               @* <div class="row"> 
                    <div class="col-sm-12 text-right" style="padding-top: 10px; padding-right: 113px;">
                        <input name="Reset" type="reset" value="Reset" class="btn btn-default calc">
                        <input type="button" value="Calculate" onclick="ProposedDebtCalc()" name="button" class="btn btn-primary calc">
                    </div>
                </div>*@
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-xs-12">
            <h5>CASH FLOW CALCULATION</h5> 
        </div>
    </div>
    <div class="row">
        <div class="col-xs-12">
            <div class="well">
                <div class="row">
                    <div class="col-xs-7">
                        <label class="control-label">Reported Annual Pre-Tax Proforma NOI</label>
                    </div>
                    <div class="col-xs-5">  
                        <input type="TEXT" class="form-control" name="annualPreforma" maxlength="10" value=@Model.CumiProformaNOI readonly> 
                        <span style="display: block; font-size: 9px; font-style: italic">As last reported by List Agent/Owner</span> 
                    </div>    
                </div> 
                <div class="row">
                    <div class="col-xs-7"> 
                        <label class="control-label">Proposed Annual Debt Service</label>
                    </div>
                    <div class="col-xs-5">  
                        <input type="TEXT" class="form-control" name="annualDebt1" maxlength="10" value="">  
                        <span style="display: block; font-size: 9px; font-style: italic">Auto Filled as entered above by USC User)</span> 
                    </div>  
                </div>
                <div class="row">
                    <div class="col-xs-7"> 
                        <label class="control-label">Calcu Annual Pre-Tax Cash Flow</label>
                    </div>
                    <div class="col-xs-5">  
                        <div class="row" style="margin: 0;">
                            <input type="TEXT" name="calcCashFlow" class="form-control" maxlength="10">  
                        </div>
                        <div class="row" style="margin: 0;">
                            <input type="TEXT" name="cashFlowPerc" class="form-control" readonly style="width: 50px; float: left; margin-right: 5px;" />
                            <span style="float: left; width: 20px; text-align: center; padding-top: 3px;">%</span>
                        </div>
                        <span style="display: block; font-size: 9px; font-style: italic;">As % of (LP/CMV) or (PP) Cash Equity</span> 
                    </div>  
                </div>
            </div>
        </div>
    </div>
</div>


<script>
 $(document).ready(function () {
     
     var temp = $('input[name="annualPreforma"]').val();
     $('input[name="annualPreforma"]').val(formatMoney(temp, true));

     var l1 = document.getElementById('hdnListedPrice').value;
     var a1 = document.getElementById('hdnAppraisal').value;
     if (getNumberFromValue(l1) > 0) {
         $('input[name="listedPrice"]').val(formatMoney(l1, true));
         var radiobtn = document.getElementById("radiobtn1");
         radiobtn.checked = true;
         document.getElementById("equityPrice").innerHTML = "Listed Price";
     }
     else if (getNumberFromValue(a1) > 0) {
         $('input[name="listedPrice"]').val(formatMoney(a1, true));
         var radiobtn = document.getElementById("radiobtn2");
         radiobtn.checked = true;
         document.getElementById("equityPrice").innerHTML = "CMV";
     }
        
        $(".option").change(function () {
            var val = $('.option:checked').val();
            switch (val) {
                case 'ListedPrice': 
                    var listing = document.getElementById('hdnListedPrice').value;
                    $('input[name="listedPrice"]').val(formatMoney(listing, true));
                    document.getElementById("equityPrice").innerHTML = "Listed Price";
                      break;
                case 'Appraisal' :
                    var appraisal = document.getElementById('hdnAppraisal').value;
                    $('input[name="listedPrice"]').val(formatMoney(appraisal, true));
                    document.getElementById("equityPrice").innerHTML = "CMV";
                     break;
               }   
        });

        
       
 });

 function selectFunding() {
     var option = null;
     option = $("#ddlFunding option:selected").text();
     if (option == null) { return; }
     if (option == "Fixed") {
         $('input[name="debtDate"]').prop('readonly', true);
     }
     else if (option == "Adjustable") {
         $('input[name="debtDate"]').prop('readonly', false);
     }

 }

 function EquityCalculation() {
     var principal = $('input[name="proposedPrin"]').val(); //.getElementsByName('#proposedPrin').value;
     var listingPrice = $('input[name="listedPrice"]').val()
     //$('input[name="listedPrice"]').val(listingPrice);
     $('input[name="proposedPrin1"]').val(formatMoney(principal,true));
     var balance = getNumberFromValue(listingPrice) - getNumberFromValue(principal);
     $('input[name="balanceAcq"]').val(formatMoney(Math.round(balance.toFixed(2)).toString(),true));
     var equityPer = (balance / getNumberFromValue(listingPrice)) * 100;
     $('input[name="equityPer"]').val(Math.round( equityPer.toFixed(2)));
     calculateMonthlyPayment()
 }

 function calculateMonthlyPayment() {
     var principal = $('input[name="proposedPrin"]').val();// document.getElementsByName('#proposedPrin').value;
     principal = getNumberFromValue(principal);
     var irate = $('input[name="lenderIntrest"]').val();//document.getElementsByName('#lenderIntrest').value; 
     irate = getNumberFromValue(irate);

     var option = null;

     option = $("#ddlAmortSchedule option:selected").text();
     if (option == null) { return; }

     if (irate > 1.0) {
         irate /= 100;
     }

     var payment = 0;

     if (option == '0') {
         payment = (principal * irate) / 12;
         $('input[name="monthlyPayment"]').val(formatMoney(Math.round(payment.toFixed(2)).toString(), true)); 
         $('input[name="paymentType"]').val("IO");
     } else if (option == '10' || option == '15' || option == '30' || option == '20' || option == '25') {

         $('input[name="paymentType"]').val("P&I");

         irate /= 12;

         payments = parseInt(option) * 12;

         var p = 1.0;
         for (var i = 0; i < payments; i++)
             p = p * (1 + irate);

         payment = (principal * p * irate) / (p - 1);
         $('input[name="monthlyPayment"]').val(formatMoney(Math.round(payment.toFixed(2)).toString(),true)); 
     }

     var anDebt = payment * 12;
     $('input[name="annualDebt"]').val(formatMoney(Math.round(anDebt.toFixed(2)).toString(),true)); 
     $('input[name="annualDebt1"]').val(formatMoney(Math.round(anDebt.toFixed(2)).toString(),true));
     // calculate pre-tax cash flow:
     var perfoma = getNumberFromValue($('input[name="annualPreforma"]').val());
     var annualDebt = getNumberFromValue($('input[name="annualDebt1"]').val());
     var cashFlow = perfoma - annualDebt;
     $('input[name="calcCashFlow"]').val(formatMoney(Math.round(cashFlow.toFixed(2)).toString(),true));
     var balanceAcq = getNumberFromValue($('input[name="balanceAcq"]').val());
     var flowPrec = (cashFlow / balanceAcq) * 100;
     $('input[name="cashFlowPerc"]').val(flowPrec.toFixed(2));
     
 }

 function computeField(input) {
     if (input.value != null && input.value.length != 0)
         input.value = "" + eval(input.value);
     // computeForm(input.form);
 }

 function checkNumber(fld, min, max, message) {
     message = message + " field has invalid data: " + fld;

     num = getNumber(fld);
     if (num == null) {
         //alert(message + " you must enter a value");
         return false;
     }

     if (num < min || max < num) {
         //alert(message + " is not in the range [" + min + ".." + max + "]");
         return false;
     }

     return true;
 }


 function getNumberFromNonInput(element) {
     var str = element.innerHTML;
     var tmp = '';

     if (element.innerHTML.length == 0) {
         return null;
     }

     for (var i = 0; i < str.length; i++) {
         var ch = str.substring(i, i + 1);
         if (ch == '$' || ch == ',' || ((ch < '0' || ch > '9') && ch != '.')) {
             continue;
         }
         tmp += ch;
     }

     if (tmp == '') {
         return null;
     }

     var num = parseFloat(tmp)

     return num;
 }

 function getNumberFromValue(val) {
     var tmp = '';

     if (!val) {
         return null;
     }

     for (var i = 0; i < val.length; i++) {
         var ch = val.substring(i, i + 1);
         if (ch == '$' || ch == ',' || ((ch < '0' || ch > '9') && ch != '.')) {
             continue;
         }
         tmp += ch;
     }

     if (tmp == '') {
         return null;
     }

     var num = parseFloat(tmp)

     return num;
 }

 function toMoney(input, addDollarSign) {
     if (input.value != null && input.value.length != 0) {
         var sign = (addDollarSign) ? '$' : '';
         num = getNumberFromValue(input.value);
         if (num == null) {
             return;
         }

         str = num.toString();
         sig = str.split('.');

         tmp = '';
         len = sig[0].length;
         for (var i = len, j = 1; i > 0; i--, j++) {
             var t = sig[0].substring(i, i - 1);
             tmp = t + tmp;
             if ((j % 3 == 0) && j != len) {
                 tmp = ',' + tmp;
             }
         }

         if (sig.length > 1 && sig[1].length) {
             tmp += '.' + sig[1].substr(0, 1);
             var t = sig[1].substr(1, 1);
             if (t) {
                 tmp += t;
             } else {
                 tmp += '0';
             }
         }
         str = sign + tmp;

         input.value = str;
     }
 }

 function formatMoney(value, addDollarSign) {
     if (value != null) {
         var sign = (addDollarSign) ? '$' : '';
         num = getNumberFromValue(value);
         if (num == null) {
             return;
         }

         str = num.toString();
         sig = str.split('.');

         tmp = '';
         len = sig[0].length;
         for (var i = len, j = 1; i > 0; i--, j++) {
             var t = sig[0].substring(i, i - 1);
             tmp = t + tmp;
             if ((j % 3 == 0) && j != len) {
                 tmp = ',' + tmp;
             }
         }

         if (sig.length > 1 && sig[1].length) {
             tmp += '.' + sig[1].substr(0, 1);
             var t = sig[1].substr(1, 1);
             if (t) {
                 tmp += t;
             } else {
                 tmp += '0';
             }
         }
         str = sign + tmp;

         return str;
     }
 }


 function padCommas(element, addDollarSign) {
     // asumming element is span, not input
     if (element) {
         if (element.innerHTML.length != 0 && element.innerHTML != null) {
             var sign = (addDollarSign) ? '$' : '';
             num = getNumberFromNonInput(element);
             if (num == null) {
                 return;
             }

             str = num.toString();
             sig = str.split('.');

             tmp = '';
             len = sig[0].length;
             for (var i = len, j = 1; i > 0; i--, j++) {
                 var t = sig[0].substring(i, i - 1);
                 tmp = t + tmp;
                 if ((j % 3 == 0) && j != len) {
                     tmp = ',' + tmp;
                 }
             }

             if (sig.length > 1 && sig[1].length) {
                 tmp += '.' + sig[1].substr(0, 1);
                 var t = sig[1].substr(1, 1);
                 if (t) {
                     tmp += t;
                 } else {
                     tmp += '0';
                 }
             }
             str = sign + tmp;
             element.innerHTML = str;
         }
     }
 }

 function addCommasToInput(control) {
     $(control).val(addCommas($(control).val(), false));
 };

 function addCommas(str, includeDecimals, addDollarSign, addPercentSign) {
     str = str.replace(/,/g, "");
     var isNegative = str.indexOf("-") > -1;
     str = str.replace(/-/g, "");
     var output = getNumberFromValue(str);
     output = (str + "").replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,")
     if (addDollarSign) {
         output = "$" + output;
     }
     else if (addPercentSign) {
         output = output + "%";
     }
     if (isNegative) {
         output = "<" + output + ">";
     }
     return output;
 }


</script>