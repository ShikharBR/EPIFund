@using PagedList.Mvc
@model PagedList.IPagedList<Inview.Epi.EpiFund.Domain.ViewModel.OrderModel>

<div class="panel panel-default" style="border: 1px solid #B1A795;">
    <div class="panel-heading">
        <span style="font-weight: bold;">@Model.TotalItemCount result(s) found</span>
    </div>
    @if (Model.Count > 0)
    {
        <div class="overflow short-xs">
            <table class="table table-striped" id="tbUsers" cellpadding="5" cellspacing="5" style="font-size: 10px !important; padding: 5px; vertical-align: middle;">
                <thead>
                    <tr>
                        <th>Asset ID</th>
                        <th>Asset Type</th>
                        <th>Asset Name</th>
                        <th>County</th>
                        <th>City</th>
                        <th>ST</th>
                        <th>APN</th>
                        <th>Date of<br />
                            Order</th>
                        <th>Date of<br />
                            Submit</th>
                        <th>Paid</th>
                        <th>Date Paid</th>
                        <th colspan="2">&nbsp;</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < @Model.Count; i++)
                    {
                        <tr>
                            <td>
                                @Model[i].AssetNumber
                            </td>
                            <td>
                                @Inview.Epi.EpiFund.Domain.Helpers.EnumHelper.GetEnumDescription(@Model[i].Type)
                            </td>
                            <td>
                                @Model[i].AssetName
                            </td>
                            <td>
                                @Model[i].County
                            </td>
                            <td>
                                @Model[i].City
                            </td>
                            <td>
                                @Model[i].State
                            </td>
                            <td>
                                @Model[i].APN
                            </td>
                            <td>
                                @if (Model[i].DateOfOrder.HasValue)
                                {
                                    <span>
                                        @Model[i].DateOfOrder.Value.ToShortDateString()
                                    </span>
                                }
                                else
                                {

                                }
                            </td>
                            <td>
                                @if (Model[i].DateOfSubmit.HasValue)
                                {
                                    <span>@Model[i].DateOfSubmit.Value.ToShortDateString()</span>
                                }
                                else
                                {
                                    <span>&nbsp;</span>
                                }
                            </td>
                            <td>
                                @Model[i].Due.Value.ToString("C0")
                            </td>
                            <td>
                                @if (Model[i].DatePaid.HasValue)
                                {
                                    <span>@Model[i].DatePaid.Value.ToShortDateString()</span>
                                }
                            </td>
                            <td>
                                <a href="@Url.Action("EditTitleOrderPayment", "Admin", new { @id = Model[i].TitleOrderPaymentId, tid = Model[i].TitleCompanyId })" title="edit">
                                    <span class="glyphicon glyphicon-pencil"></span></a>
                            </td>
                            <td>
                                <a href="@Url.Action("DeleteTitleOrderPayment", "Admin", new { @id = Model[i].TitleOrderPaymentId, tid = Model[i].TitleCompanyId })" title="delete" onclick = "return confirm('Are you sure you wish to delete this order payment?');">
                                    <span class="glyphicon glyphicon-remove"></span></a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => "javascript:RenderPage('" + page + "', 'completed')")