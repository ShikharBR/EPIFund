@using PagedList.Mvc
@model PagedList.IPagedList<Inview.Epi.EpiFund.Domain.ViewModel.MbaViewModel>

<div class="panel panel-default" style="border: 1px solid #B1A795">
    <div class="panel-heading">
        <span style="font-weight: bold;">@Model.TotalItemCount result(s) found</span>
    </div>
    <div class="overflow short-xs">
        <table class="table table-striped" id="tbUsers" cellpadding="5" cellspacing="5" style="padding: 5px; font-size: 10px !important; vertical-align: middle;">
                <thead>
                    <tr>
                        <td>
                            <b><a style="cursor: pointer" onclick="postForm('@ViewBag.FirstNameSortParm')">First Name</a></b>
                        </td>
                        <td>
                            <b><a style="cursor: pointer" onclick="postForm('@ViewBag.LastNameSortParm')">Last Name</a></b>
                        </td>
                        <td>
                            <b><a style="cursor: pointer" onclick="postForm('@ViewBag.EmailSortParm')">Email</a></b>
                        </td>
                        <td>
                            <b><a style="cursor: pointer" onclick="postForm('@ViewBag.CompanyNameSortParm')">Company Name</a></b>
                        </td>
                        <td>
                            <b><a style="cursor: pointer" onclick="postForm('@ViewBag.StateSortParm')">State</a></b>
                        </td>
                        <td>
                            <b><a style="cursor: pointer" onclick="postForm('@ViewBag.IsActiveParm')">Active?</a></b>
                        </td>
                        <td></td>
                        <td colspan="2"></td>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in @Model)
                    {
                        <tr id="@item.MbaUserId">
                            <td>
                                @item.FirstName
                            </td>
                            <td>
                                @item.LastName
                            </td>
                            <td>
                                @item.Email
                            </td>
                            <td>
                                @item.CompanyName
                            </td>
                            <td>
                                @item.State
                            </td>
                            <td>
                                @(item.IsActive ? "Yes" : "No")
                            </td>
                            <td style="text-align: center;">
                                <a href="@Url.Action("UpdateMba", "Admin", new { id = @item.MbaUserId })" title="edit">
                                    <span class="glyphicon glyphicon-pencil"></span></a>
                            </td>
                            <td>
                                @if (item.IsActive)
                                {
                                    <a href="@Url.Action("DeactivateMba", "Admin", new { id = @item.MbaUserId })" title="delete" onclick = "return confirm('Are you sure you wish to deactivate this MBA member?');">
                                        <span class="glyphicon glyphicon-remove"></span></a>
                                }
                                else
                                {
                                    <a href="@Url.Action("ReactivateMba", "Admin", new { id = @item.MbaUserId })" title="reactivate" onclick = "return confirm('Are you sure you wish to reactivate this MBA member?');">
                                        <span class="glyphicon glyphicon-ok"></span></a>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
    </div>
    
</div>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("ManageMBAMembersImported",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
