@model Inview.Epi.EpiFund.Domain.ViewModel.AssetEscrowModel
@Html.HiddenFor(s => s.AssetId)
@Html.HiddenFor(s => s.AssetNumber)
@Html.HiddenFor(s => s.AssetDescription)
@Html.HiddenFor(s => s.IsClosing)
<div class="panel panel-default">
    <div class="panel-heading">
        Asset Details
    </div>
    <div class="panel-body">
        <div class="row">
            <div class="col-lg-12">
                <div class="input-group">
                    @Html.LabelFor(s => s.AssetNumber, new { @class = "control-label" })
                    @Html.DisplayFor(s => s.AssetNumber)
                    @Html.HiddenFor(x => x.AssetNumber)
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <div class="input-group">
                    @Html.LabelFor(s => s.AssetDescription, new { @class = "control-label" })
                    @Html.DisplayFor(s => s.AssetDescription)
                    @Html.HiddenFor(x => x.AssetDescription)
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <div class="input-group">
                    @Html.LabelFor(s => s.ListingPrice, new { @class = "control-label" })
                    @Model.ListingPrice.ToString("C")
                    @Html.HiddenFor(x => x.ListingPrice)
                </div>
            </div>
        </div>
    </div>
</div>
<div class="panel panel-default">
    <div class="panel-heading">
        Enter Binding Escrow
    </div>
    <div class="panel-body">
        <div class="row">
            <div class="col-lg-12">
                @Html.LabelFor(s => s.ProjectedClosingDate, new { @class = "control-label" })
                <div class="input-group">
                    @Html.EditorFor(s => s.ProjectedClosingDate, new { @class = "date" })
                </div>
            </div>
        </div>
    </div>
</div>

@if (Model.ProjectedClosingDate.HasValue)
{
    <div class="panel panel-default">
        <div class="panel-heading">
            Closing Escrow
        </div>
        <div class="panel-body">
            <div class="row">
                <div class="col-lg-12">
                    @Html.LabelFor(s => s.ContractBuyer, new { @class = "control-label" })
                    <div class="input-group">
                        @Html.EditorFor(s => s.ContractBuyer)
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12">
                    @Html.LabelFor(s => s.ContractBuyerAddress, new { @class = "control-label" })
                    <div class="input-group">
                        @Html.EditorFor(s => s.ContractBuyerAddress)
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12">
                    @Html.LabelFor(s => s.PrincipalContactOfContractBuyer, new { @class = "control-label" })
                    <div class="input-group">
                        @Html.EditorFor(s => s.PrincipalContactOfContractBuyer)
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12">
                    @Html.LabelFor(s => s.ActualClosingDate, new { @class = "control-label" })
                    <div class="input-group">
                        @Html.EditorFor(s => s.ActualClosingDate)
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12">
                    @Html.LabelFor(s => s.ClosingPrice, new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon">$</span>
                        @Html.TextBoxFor(s => s.ClosingPrice, new { style = "width: 132px;", @class = "formatNumber" })
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script>
    $(document).ready(function () {
        $("input.formatNumber").each(function (index) {
            $(this).val(addCommas($(this).val(), true));
            $(this).on("input", null, null, function () {
                $(this).val(addCommas($(this).val(), true));
            });
        });
    });
    function fixNumbers() {
        $("input.formatNumber").each(function (index) {
            $(this).val($(this).val().replace(/,/g, ""));
        });
        $("input.formatMaint").each(function (index) {
            $(this).val($(this).val().replace(/,/g, ""));
        });
    };
</script>
