@model Inview.Epi.EpiFund.Domain.ViewModel.RegistrationModel
<fieldset id="pnlUserInformation">
    <div class="row">
        <div class="col-sm-12">
            <legend>Principal Information</legend>
            @Html.HiddenFor(m => m.UserId)
            @Html.HiddenFor(s => s.AssetId)
            @Html.HiddenFor(s => s.ReturnUrl)
            @Html.HiddenFor(x => x.ReferralId)
            @if (Model != null)
            {
                for (int i = 0; i < Model.AssetIds.Count; i++)
                {
                    @Html.HiddenFor(m => Model.AssetIds[i])
                }
            }

            <div class="row">
                <div class="col-sm-6">
                    <div class="input-group">
                        @Html.LabelFor(s => s.Month, new { @class = "control-label" })
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="input-group">
                        @Html.DisplayFor(s => s.Month, new { @class = "control-label" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="input-group">
                        @Html.LabelFor(s => s.Day, new { @class = "control-label" })
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="input-group">
                        @Html.DisplayFor(s => s.Day, new { @class = "control-label" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="input-group">
                        @Html.LabelFor(s => s.Year, new { @class = "control-label" })
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="input-group">
                        @Html.DisplayFor(s => s.Year, new { @class = "control-label" })
                    </div>
                </div>
            </div>

            <div class="control-group">
                @Html.LabelFor(s => s.FirstName, new { @class = "control-label", style = "font-weight:bold;" })<span class="red">@Html.ValidationMessageFor(s => s.FirstName, "*")</span>
                <div class="controls">
                    @Html.TextBoxFor(s => s.FirstName)
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(s => s.LastName, new { @class = "control-label", style = "font-weight:bold;" })<span class="red">@Html.ValidationMessageFor(s => s.LastName, "*")</span>
                <div class="controls">
                    @Html.TextBoxFor(s => s.LastName)
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            In order to assign appropriate access privileges and services to you we will need to know what type of category you are registering as.
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <div class="control-group">
                @Html.LabelFor(s => s.SelectedUserType, new { @class = "control-label", style = "font-weight:bold;" })<span class="red">@Html.ValidationMessageFor(s => s.SelectedUserType, "*")</span>
                <div class="controls">
                    @Html.DropDownListFor(s => s.SelectedUserType, @Model.UserTypes, new { onchange = "checkUserType()" })
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="control-group">
                <em>(<b>CRE</b>: Commercial Real Estate)</em>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <div class="control-group">
                @Html.LabelFor(s => s.CompanyName, new { @class = "control-label", style = "width:96px; font-weight:bold;" })<span class="red">@Html.ValidationMessageFor(s => s.CompanyName, "*")</span>
                <div class="controls">
                    @Html.TextBoxFor(s => s.CompanyName)
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="control-group">
                <em>This data field is for the Corporate Entity Name that you anticipate vesting title into any prospective asset acquisition. If you do not have a corporate entity, enter your full name instead.</em>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-12">
            <div class="control-group">
                @Html.LabelFor(s => s.SelectedCorporateEntityType, new { @class = "control-label", style = "font-weight:bold;" })<span class="red">@Html.ValidationMessageFor(s => s.SelectedCorporateEntityType, "*")</span>
                <div class="controls">
                    @Html.DropDownListFor(s => s.SelectedCorporateEntityType, @Model.CorporateEntityTypes)
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(s => s.CorporateTitle, new { @class = "control-label", style = "font-weight:bold;" })
                <div class="controls">
                    @Html.DropDownListFor(s => s.CorporateTitle, @Model.CorporateTitles)
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-6">
            <div class="control-group">
                @Html.LabelFor(s => s.AcroynmForCorporateEntity, new { @class = "control-label", style = "font-weight:bold;" })
                <div class="controls">
                    @Html.TextBoxFor(s => s.AcroynmForCorporateEntity)
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="control-group">
                <em>Example. Acronym for US CRE online, LLC is USC</em>
            </div>
        </div>
    </div>
@*    <div class="row">
        <div class="col-lg-6">
            <div class="control-group">
                @Html.LabelFor(s => s.EIN, new { @class = "control-label", style = "font-weight:bold;" })
                <div class="controls">
                    @Html.TextBoxFor(s => s.EIN)
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-6">
            <div class="control-group">
                @Html.LabelFor(s => s.CorporateTIN, new { @class = "control-label", style = "font-weight:bold;" })
                <div class="controls">
                    @Html.TextBoxFor(s => s.CorporateTIN)
                </div>
            </div>
        </div>
    </div>*@
    <div class="row">
        <div class="col-lg-6">
            <div class="control-group">
                @Html.LabelFor(s => s.LicenseDesc, new { @class = "control-label", style = "font-weight:bold;" })
                <div class="controls">
                    @Html.TextBoxFor(s => s.LicenseDesc)
                </div>
            </div>
        </div>
          <div class="col-lg-6">
            <div class="control-group">
                <em>Mortgage broker/banker, real estate license, contractor, etc</em>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="control-group">
                @Html.LabelFor(s => s.StateLicenseHeld, new { @class = "control-label", style = "font-weight:bold;" })
                <div class="controls">
                    @Html.DropDownListFor(s => s.StateLicenseHeld, @Model.States)
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-6">
            <div class="control-group">
                @Html.LabelFor(s => s.LicenseNumber, new { @class = "control-label", style = "font-weight:bold;" })
                <div class="controls">
                    @Html.TextBoxFor(s => s.LicenseNumber)
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-12">
            <div class="control-group">
                @Html.LabelFor(s => s.StateOfOriginCorporateEntity, new { @class = "control-label", style = "font-weight:bold;" })
                <div class="controls">
                    @Html.DropDownListFor(s => s.StateOfOriginCorporateEntity, @Model.States)
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="control-group">
                @Html.LabelFor(s => s.IsCertificateOfGoodStandingAvailable, new { @class = "control-label", style = "font-weight:bold;" })
                <div class="controls">
                    @Html.RadioButtonFor(model => model.IsCertificateOfGoodStandingAvailable, "true", new { @class = "no-left-margin" }) Yes
            @Html.RadioButtonFor(model => model.IsCertificateOfGoodStandingAvailable, "false") No            
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="control-group">
                @Html.LabelFor(s => s.AddressLine1, new { @class = "control-label", style = "font-weight:bold;" })<span class="red">@Html.ValidationMessageFor(s => s.AddressLine1, "*")</span>
                <div class="controls">
                    @Html.TextBoxFor(s => s.AddressLine1)
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-6">
            <div class="control-group">
                @Html.LabelFor(s => s.AddressLine2, new { @class = "control-label", style = "font-weight:bold;" })
                <div class="controls">
                    @Html.TextBoxFor(s => s.AddressLine2)
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="control-group">
                <em>(Suite #: show as Suite xxx")</em>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="control-group">
                @Html.LabelFor(s => s.City, new { @class = "control-label", style = "font-weight:bold;" })<span class="red">@Html.ValidationMessageFor(s => s.City, "*")</span>
                <div class="controls">
                    @Html.TextBoxFor(s => s.City)
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="control-group">
                @Html.LabelFor(s => s.SelectedState, new { @class = "control-label", style = "font-weight:bold;" })<span class="red">@Html.ValidationMessageFor(s => s.SelectedState, "*")</span>
                <div class="controls">
                    @Html.DropDownListFor(s => s.SelectedState, @Model.States)
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="control-group">
                @Html.LabelFor(s => s.Zip, new { @class = "control-label", style = "font-weight:bold;" })<span class="red">@Html.ValidationMessageFor(s => s.Zip, "*")</span>
                <div class="controls">
                    @Html.TextBoxFor(s => s.Zip)
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="control-group">
                @Html.LabelFor(s => s.WorkNumber, new { @class = "control-label", style = "font-weight:bold;" })
                <div class="controls">
                    @Html.TextBoxFor(s => s.WorkNumber)
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="control-group">
                @Html.LabelFor(s => s.CellNumber, new { @class = "control-label", style = "font-weight:bold;" })<span class="red">@Html.ValidationMessageFor(s => s.CellNumber, "*")</span>
                <div class="controls">
                    @Html.TextBoxFor(s => s.CellNumber)
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="control-group">
                @Html.LabelFor(s => s.FaxNumber, new { @class = "control-label", style = "font-weight:bold;" })<span class="red">@Html.ValidationMessageFor(s => s.FaxNumber, "")</span>
                <div class="controls">
                    @Html.TextBoxFor(s => s.FaxNumber)
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="control-group">
                @Html.LabelFor(s => s.SelectedPreferredMethods, new { @class = "control-label", style = "font-weight:bold; " })<span class="red">@Html.ValidationMessageFor(s => s.SelectedPreferredMethods, "*")</span>
                <div class="controls">
                    @Html.ListBoxFor(s => s.SelectedPreferredMethods, @Model.PreferredMethods, new { style = "width:200px; height: 110px;" })
                </div>
            </div>
        </div>
        <div class="col-lg-12">
            <div class="control-group">
                <em>To make multiple selections hold down your CONTROL key as you click a selection.</em>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="control-group">
                @Html.LabelFor(s => s.SelectedPreferredContactTime, new { @class = "control-label", style = "font-weight:bold;" })<span class="red">@Html.ValidationMessageFor(s => s.SelectedPreferredContactTime, "*")</span>
                <div class="controls">
                    @Html.ListBoxFor(s => s.SelectedPreferredContactTime, @Model.PreferredContactTimes)
                </div>
            </div>
        </div>
        <div class="col-lg-12">
            <div class="control-group">
                <em>To make multiple selections hold down your CONTROL key as you click a selection.</em>
            </div>
        </div>
    </div>
</fieldset>
<fieldset>
    <legend>Account Access</legend>
    <div class="row">
        <div class="col-lg-12">
            <div class="control-group">
                @Html.LabelFor(s => s.Username, new { @class = "control-label", style = "font-weight:bold;" })<span class="red">*@Html.ValidationMessageFor(s => s.Username, "")</span>
                <div class="controls">
                    @Html.TextBoxFor(s => s.Username)
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="control-group">
                @Html.LabelFor(s => s.Password, new { @class = "control-label", style = "font-weight:bold;" })<span class="red">@Html.ValidationMessageFor(s => s.Password, "*")</span>
                <div class="controls">
                    @Html.PasswordFor(s => s.Password)
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="control-group">
                @Html.LabelFor(s => s.ConfirmPassword, new { @class = "control-label", style = "font-weight:bold;" })<span class="red">@Html.ValidationMessageFor(s => s.ConfirmPassword, "*")</span>
                <div class="controls">
                    @Html.PasswordFor(s => s.ConfirmPassword)
                </div>
            </div>
        </div>
    </div>
</fieldset>
<fieldset id="propertyUpdates">
    <legend>Asset/Property Updates</legend>
    <p>
        US CRE Online – a <b>Commercial Real Estate State-of-the-Art Data Portal</b> – through its Registrants, constantly adds to and updates critical data to its CRE Asset Inventory and CRE Principal & Professional Community databases.  As a registered member of USC, you have opportunity to receive notifications of all newly published and or updated CRE inventory in real time.  As a registered member of USC, the assumption is that you have interest in Commercial Real Estate in no less than one of the Asset Categories listed below.  Therefore, as part of your registration, <span style="font-weight: bold; color: red;">you are required to select at least one of the Asset Classifications</span>; and you may select all of the categories if you so choose.  At any time your may amend your selection through your “My USC Page”.  Thank you.
    </p>
    <div class="row">
        <div class="col-lg-4">
            <div class="input-group">
                @Html.CheckBoxFor(s => s.MultiFamilyInterest)@Html.LabelFor(s => s.MultiFamilyInterest, new { style = "font-size:11px;" })
            </div>
        </div>
        <div class="col-lg-4">
            <div class="input-group">
                @Html.CheckBoxFor(s => s.RetailTenantPropertyInterest)@Html.LabelFor(s => s.RetailTenantPropertyInterest, new { style = "font-size:11px;" })
            </div>
        </div>
        <div class="col-lg-4">
            <div class="input-group">
                @Html.CheckBoxFor(s => s.OfficeTenantPropertyInterest)@Html.LabelFor(s => s.OfficeTenantPropertyInterest, new { style = "font-size:11px;" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-4">
            <div class="input-group">
                @Html.CheckBoxFor(s => s.FuelServicePropertyInterest)@Html.LabelFor(s => s.FuelServicePropertyInterest, new { style = "font-size:11px;" })
            </div>
        </div>
        <div class="col-lg-4">
            <div class="input-group">
                @Html.CheckBoxFor(s => s.MedicalTenantPropertyInterest)@Html.LabelFor(s => s.MedicalTenantPropertyInterest, new { style = "font-size:11px;" })
            </div>
        </div>
        <div class="col-lg-4">
            <div class="input-group">
                @Html.CheckBoxFor(s => s.IndustryTenantPropertyInterest)@Html.LabelFor(s => s.IndustryTenantPropertyInterest, new { style = "font-size:11px;" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-4">
            <div class="input-group">
                @Html.CheckBoxFor(s => s.MHPInterest)@Html.LabelFor(s => s.MHPInterest)
            </div>
        </div>
        <div class="col-lg-4">
            <div class="input-group">
                @Html.CheckBoxFor(s => s.SingleTenantRetailPortfoliosInterest)@Html.LabelFor(s => s.SingleTenantRetailPortfoliosInterest, new { style = "font-size:11px;" })
            </div>
        </div>
        <div class="col-lg-4">
            <div class="input-group">
                @Html.CheckBoxFor(s => s.MixedUseCommercialPropertyInterest)@Html.LabelFor(s => s.MixedUseCommercialPropertyInterest, new { style = "font-size:11px;" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-4">
            <div class="input-group">
                @Html.CheckBoxFor(s => s.FracturedCondoPortfoliosInterest)@Html.LabelFor(s => s.FracturedCondoPortfoliosInterest, new { style = "font-size:11px;" })
            </div>
        </div>
        <div class="col-lg-4">
            <div class="input-group">
                @Html.CheckBoxFor(s => s.MiniStoragePropertyInterest)@Html.LabelFor(s => s.MiniStoragePropertyInterest, new { style = "font-size:11px;" })
            </div>
        </div>
        <div class="col-lg-4">
            <div class="input-group">
                @Html.CheckBoxFor(s => s.ResortHotelMotelPropertyInterest)@Html.LabelFor(s => s.ResortHotelMotelPropertyInterest, new { style = "font-size:11px;" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-4">
            <div class="input-group">
                @Html.CheckBoxFor(s => s.GorvernmentTenantPropertyInterest)@Html.LabelFor(s => s.GorvernmentTenantPropertyInterest, new { style = "font-size:11px;" })
            </div>
        </div>
        <div class="col-lg-4">
            <div class="input-group">
                @Html.CheckBoxFor(s => s.ParkingGaragePropertyInterest)@Html.LabelFor(s => s.ParkingGaragePropertyInterest, new { style = "font-size:11px;" })
            </div>
        </div>
        <div class="col-lg-4">
            <div class="input-group">
                @Html.CheckBoxFor(s => s.NonCompletedDevelopmentsInterest)@Html.LabelFor(s => s.NonCompletedDevelopmentsInterest, new { style = "font-size:11px;" })
            </div>
        </div>
    </div>
    @Html.ValidationMessageFor(s => s.CommercialOfficeInterest)
</fieldset>
<fieldset>
    <legend>Terms of Use</legend>
    <p>Before you can proceed you must acknowledge and approve the USC “Terms of Use” agreement, and acknowledge and approve our “NCND” agreement.  Please click the hyperlink @Html.ActionLink("Terms of Use", "PrivacyPolicy", new { }, new { target = "_blank" }) and review our commitment to each and every US CRE Online User.  Additionally, please click the hyperlink @Html.ActionLink("NCND", "DownloadNCNDTemplate", "DataPortal") to review our mandatory, Industry Standard <b>Non-Compete Non-Disclosure Agreement</b>.  When you have reviewed and approved said agreements, please select the appropriate boxes below and proceed with the registration process.</p>
    <p>Before you can proceed you must approve our "Terms of Use" agreement. Please click the hyperlink @Html.ActionLink("Terms of Use", "PrivacyPolicy", new { }, new { target = "_blank" }) and review our commitment to each and every US CRE online principal. When you have reviewed our Terms of Use and approve same, please select the appropriate box below and proceed with the registration process.</p>
    <div class="control-group">
        <div class="controls">
            @Html.CheckBoxFor(s => s.TermsOfUse)
            <label class="control-label" style="font-weight: bold; display: inline">I acknowledge and agree to the @Html.ActionLink("Terms of Use", "PrivacyPolicy", new { }, new { target = "_blank" }) for US CRE Online</label><span style="color: red;">*</span>
        </div>
    </div>
    <div class="control-group">
        <div class="controls">
            @Html.CheckBoxFor(s => s.AgreesToNCND)<label class="control-label" style="font-weight: bold;">I acknowledge and agree to the US CRE Online ("@Html.ActionLink("NCND", "DownloadNCNDTemplate", "DataPortal")") <span style="color: red;">*</span></label>
        </div>
    </div>
</fieldset>
@if (Model.AssetId.HasValue)
{
    <fieldset>
        <legend>NCND and IPA Agreements</legend>
        <p>Completion of the registration protocol requires review, approval, and execution of the US CRE online “Non Compete Non Disclosure Confidentiality Agreement” (“NCND”) and “Internet Portal Agreement” (“IPA”). Please click the hyperlinks for @Html.ActionLink("NCND", "ShowNCND") and @Html.ActionLink("MDA", "ShowMDA") and review the provisions of each document. When you have completed your review of the NCND and MDA Agreements and approve same, please select the appropriate box below and proceed with the registration process. Each document will be electronically executed in your registration name and will be e mailed to you for your permanent record as well as made available to you for 24/7 review through you’re [my US CRE online] page.</p>
        <p style="display: none;">Completion of the registration protocol requires review, approval, and execution of the US CRE online “Internet Portal Agreement” (“IPA”). Please click the hyperlink @Html.ActionLink("MDA", "ShowMDA") and review the provisions of the document. When you have completed your review of the MDA Agreements and approve same, please select the appropriate box below and proceed with the registration process. The document will be electronically executed in your registration name and will be e mailed to you for your permanent record as well as made available to you for 24/7 review through you’re [my US CRE online] page.</p>
        <div class="control-group">
            <div class="controls">
                @Html.CheckBoxFor(s => s.AgreesToMDA)<label class="control-label" style="font-weight: bold;">I acknowledge and agree to the US CRE online IPA <span style="color: red;">*</span></label>
            </div>
        </div>
    </fieldset>
}

<script type="text/javascript">
    $(document).ready(function () {
        var type = $("#SelectedUserType").val();
        if (type == "ICAdmin") {
            $("#propertyUpdates").hide();
        }
    })
    function checkUserType() {
        $("#propertyUpdates").show();
        var type = $("#SelectedUserType").val();
        if (type == "ICAdmin") {
            $("#propertyUpdates").hide();
        }
    }
</script>
